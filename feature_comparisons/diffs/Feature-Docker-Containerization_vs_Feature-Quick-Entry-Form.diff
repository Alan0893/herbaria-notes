diff --git a/classes/OccurrenceEditorManager.php b/classes/OccurrenceEditorManager.php
index 7eef78708..e3c1b2128 100644
--- a/classes/OccurrenceEditorManager.php
+++ b/classes/OccurrenceEditorManager.php
@@ -72,7 +72,8 @@ class OccurrenceEditorManager {
 			'associatedtaxa' => 's',
 			'verbatimattributes' => 's',
 			'behavior' => 's',
-			'vitality' => 's',
+			// NOTE: this is commented to let the code work with current database
+			// 'vitality' => 's',
 			'dynamicproperties' => 's',
 			'reproductivecondition' => 's',
 			'cultivationstatus' => 's',
@@ -120,7 +121,26 @@ class OccurrenceEditorManager {
 			'processingstatus' => 's',
 			'recordenteredby' => 's',
 			'observeruid' => 'n',
-			'dateentered' => 'd'
+			'dateentered' => 'd',
+			// for quick entry form
+			'accesNum' => 'n', 
+			'filedUnder' => 's', 
+			'currName' => 's', 
+			'idQualifier' => 's',
+			'detText' => 's', 
+			'provenance' => 's', 
+			'container' => 's', 
+			'collTrip' => 's', 
+			'geoWithin' => 's',
+			'highGeo' => 's', 
+			'frequency' => 's', 
+			'prepMethod' => 's', 
+			'format' => 's', 
+			'verbLat' => 's', 
+			'verbLong' => 's', 
+			'method' => 's', 
+			'modified' => 's', 
+			'dateLastModified' => 's', 
 		);
 		$this->fieldArr['omoccurpaleo'] = array(
 			'eon',
@@ -184,7 +204,8 @@ class OccurrenceEditorManager {
 		}
 	}
 
-	private function getDynamicPropertiesArr() {
+	// Make this public so the quick etnry form can also use this function 
+	public function getDynamicPropertiesArr() {
 		$retArr = array();
 		$propArr = array();
 		if (!empty($this->collMap['dynamicproperties'])) {
@@ -2385,30 +2406,61 @@ class OccurrenceEditorManager {
 
 	public function getImageMap($imgId = 0) {
 		$imageMap = array();
-		if ($this->occid) {
-			$sql = 'SELECT mediaID, url, thumbnailurl, originalurl, caption, creator, creatorUid, sourceurl, copyright, notes, occid, username, sortOccurrence, initialtimestamp FROM media ';
-			if ($imgId) $sql .= 'WHERE AND (mediaID = ' . $imgId . ') ';
-			else $sql .= 'WHERE mediaType = "image" AND (occid = ' . $this->occid . ') ';
-			$sql .= 'ORDER BY sortOccurrence';
+		// NOTE: this is commented to let the code work with current database
+		// if ($this->occid) {
+		// 	$sql = 'SELECT mediaID, url, thumbnailurl, originalurl, caption, creator, creatorUid, sourceurl, copyright, notes, occid, username, sortOccurrence, initialtimestamp FROM media ';
+		// 	if ($imgId) $sql .= 'WHERE AND (mediaID = ' . $imgId . ') ';
+		// 	else $sql .= 'WHERE mediaType = "image" AND (occid = ' . $this->occid . ') ';
+		// 	$sql .= 'ORDER BY sortOccurrence';
+		// 	//echo $sql;
+		// 	$result = $this->conn->query($sql);
+		// 	while ($row = $result->fetch_object()) {
+		// 		$imageMap[$row->mediaID]['url'] = $row->url;
+		// 		$imageMap[$row->mediaID]['tnurl'] = $row->thumbnailurl;
+		// 		$imageMap[$row->mediaID]['origurl'] = $row->originalurl;
+		// 		$imageMap[$row->mediaID]['caption'] = $row->caption;
+		// 		$imageMap[$row->mediaID]['creator'] = $row->creator;
+		// 		$imageMap[$row->mediaID]['creatorUid'] = $row->creatorUid;
+		// 		$imageMap[$row->mediaID]['sourceurl'] = $row->sourceurl;
+		// 		$imageMap[$row->mediaID]['copyright'] = $row->copyright;
+		// 		$imageMap[$row->mediaID]['notes'] = $row->notes;
+		// 		$imageMap[$row->mediaID]['occid'] = $row->occid;
+		// 		$imageMap[$row->mediaID]['username'] = $row->username;
+		// 		$imageMap[$row->mediaID]['sort'] = $row->sortOccurrence;
+		// 	}
+		// 	$result->free();
+		// }
+		$this->cleanOutArr($imageMap);
+		return $imageMap;
+	}
+
+	// For quick entry form 
+	public function getImageInfo($imgId = 0){
+		$imageMap = Array();
+		if($this->occid){
+			$sql = 'SELECT imgid, url, sourceIdentifier, thumbnailurl, originalurl, caption, photographer, photographeruid, sourceurl, copyright, notes, occid, username, sortoccurrence, initialtimestamp FROM images ';
+			if($imgId) $sql .= 'WHERE (imgid = '.$imgId.') ';
+			else $sql .= 'WHERE (occid = '.$this->occid.') ';
+			$sql .= 'ORDER BY sortoccurrence';
 			//echo $sql;
+			// NOTE: imgid is used for our current database, but the latest Symbiota is uisng mediaID.  
 			$result = $this->conn->query($sql);
-			while ($row = $result->fetch_object()) {
-				$imageMap[$row->mediaID]['url'] = $row->url;
-				$imageMap[$row->mediaID]['tnurl'] = $row->thumbnailurl;
-				$imageMap[$row->mediaID]['origurl'] = $row->originalurl;
-				$imageMap[$row->mediaID]['caption'] = $row->caption;
-				$imageMap[$row->mediaID]['creator'] = $row->creator;
-				$imageMap[$row->mediaID]['creatorUid'] = $row->creatorUid;
-				$imageMap[$row->mediaID]['sourceurl'] = $row->sourceurl;
-				$imageMap[$row->mediaID]['copyright'] = $row->copyright;
-				$imageMap[$row->mediaID]['notes'] = $row->notes;
-				$imageMap[$row->mediaID]['occid'] = $row->occid;
-				$imageMap[$row->mediaID]['username'] = $row->username;
-				$imageMap[$row->mediaID]['sort'] = $row->sortOccurrence;
+			while($row = $result->fetch_object()){
+				$imageMap[$row->imgid]['url'] = $row->sourceIdentifier;
+				$imageMap[$row->imgid]['tnurl'] = $row->thumbnailurl;
+				$imageMap[$row->imgid]['origurl'] = $row->originalurl;
+				$imageMap[$row->imgid]['caption'] = $this->cleanOutStr($row->caption);
+				$imageMap[$row->imgid]['photographer'] = $this->cleanOutStr($row->photographer);
+				$imageMap[$row->imgid]['photographeruid'] = $row->photographeruid;
+				$imageMap[$row->imgid]['sourceurl'] = $row->sourceurl;
+				$imageMap[$row->imgid]['copyright'] = $this->cleanOutStr($row->copyright);
+				$imageMap[$row->imgid]['notes'] = $this->cleanOutStr($row->notes);
+				$imageMap[$row->imgid]['occid'] = $row->occid;
+				$imageMap[$row->imgid]['username'] = $this->cleanOutStr($row->username);
+				$imageMap[$row->imgid]['sort'] = $row->sortoccurrence;
 			}
 			$result->free();
 		}
-		$this->cleanOutArr($imageMap);
 		return $imageMap;
 	}
 
@@ -2734,6 +2786,46 @@ class OccurrenceEditorManager {
 	public function getOccId() {
 		return $this->occid;
 	}
+	
+	// For quick entry form
+	public function getImgIDs() {
+		$imgIDs = array();
+		$query = "SELECT imgid FROM images";
+		$result = $this->conn->query($query);
+		while ($row = $result->fetch_assoc()) {
+			$imgIDs[] = $row['imgid'];
+		}
+		$result->free();
+		return $imgIDs;
+	}
+	
+	public function getBarcode($imgID) {
+		$query = "SELECT barcode FROM images_barcode WHERE imgid = '$imgID' LIMIT 1";
+		$result = $this->conn->query($query);
+		if ($result && $row = $result->fetch_assoc()) {
+			$barcode = $row['barcode'];
+		} else {
+			$barcode = null; 
+		}
+		
+		$result->free();
+		return $barcode;
+	}
+
+	public function getOneOccID($imgId) {
+		$occid = false;
+		$query = "SELECT occid FROM images WHERE imgid = '$imgId' LIMIT 1";
+		$result = $this->conn->query($query);
+
+		if ($result && $row = $result->fetch_assoc()) {
+			$occid = $row['occid'];
+		} else {
+			$occid = null;
+		}
+		$result->free();
+
+		return $occid;
+	}
 
 	public function setOccIndex($index) {
 		if (is_numeric($index)) {
diff --git a/collections/editor/includes/quickentryimgprocessor.php b/collections/editor/includes/quickentryimgprocessor.php
new file mode 100644
index 000000000..806820975
--- /dev/null
+++ b/collections/editor/includes/quickentryimgprocessor.php
@@ -0,0 +1,44 @@
+<?php
+if($LANG_TAG != 'en' && file_exists($SERVER_ROOT.'/content/lang/collections/editor/includes/imgprocessor.'.$LANG_TAG.'.php')) include_once($SERVER_ROOT.'/content/lang/collections/editor/includes/imgprocessor.'.$LANG_TAG.'.php');
+else include_once($SERVER_ROOT.'/content/lang/collections/editor/includes/imgprocessor.en.php');
+?>
+	
+<script src="../../js/symb/collections.editor.imgtools.js?ver=3" type="text/javascript"></script>
+<link rel="stylesheet" href="../../css/symbiota/quickentry.css" type="text/css">
+<style>
+	.ocr-box{ padding: 5px; float:left; }
+	.ocr-box button{ margin: 5px; }
+</style>
+<div id="labelProcDiv" style="width:100%;height:425px;position:relative;">
+	<fieldset id="labelProcFieldset" style="background-color:#F2F2F3;">
+		<div id="labelHeaderDiv" style="margin-top:0px;height:15px;position:relative">
+			<div style="float:left;margin-top:3px;margin-right:15px"><a id="zoomInfoDiv" href="#"><?php echo $LANG['ZOOM']; ?></a></div>
+			<div id="zoomInfoDialog" style="background-color:white;">
+				<?php echo $LANG['ZOOM_DIRECTIONS']; ?>
+			</div>
+			<div style="float:left;margin-right:15px">
+				<div id="draggableImgDiv" style="float:left" title="<?php echo $LANG['MAKE_DRAGGABLE']; ?>"><a href="#" onclick="draggableImgPanel()"><img src="../../images/draggable.png" style="width:15px" /></a></div>
+				<div id="anchorImgDiv" style="float:left;margin-left:10px;display:none" title="<?php echo $LANG['ANCHOR_IMG']; ?>"><a href="#" onclick="anchorImgPanel()"><img src="../../images/anchor.png" style="width:15px" /></a></div>
+			</div>
+			<div style="float:left;;padding-right:10px;margin:2px 20px 0px 0px;"><?php echo $LANG['ROTATE']; ?>: <a href="#" onclick="rotateImage(-90)">&nbsp;L&nbsp;</a> &lt;&gt; <a href="#" onclick="rotateImage(90)">&nbsp;R&nbsp;</a></div>
+		</div>
+		<div id="labelprocessingdiv" style="clear:both;">
+			<?php $currentImageId = 0; ?>
+			<div id="labeldiv-<?php echo $currentImageId; ?>">
+				<div>
+					<img id="activeimg-<?php echo $currentImageId; ?>" src="<?php echo($imgUrlCollection[$currentImageId]) ?>" style="height:400px;" onload="initImageTool('activeimg-<?php echo $currentImageId; ?>')" />
+				</div>
+				<div style="width:100%; clear:both;">
+					<div style="float:right; margin-right:20px; font-weight:bold;">
+						<span id="current-image-index" style="display:none;"><?php echo $currentImageId; ?></span>
+						<span id="image-count">Image <?php echo ($currentImageId + 1); ?> of <?php echo count($imgUrlCollection); ?></span>
+						<?php if(count($imgUrlCollection) > 1): ?>
+							<input type="hidden" id="image-collection-input" value='<?php echo json_encode($imgUrlCollection); ?>'>
+							<a href="#" onclick="return nextProcessingImage();">>&gt;</a>
+						<?php endif; ?>
+					</div>
+				</div>
+			</div>
+		</div>
+	</fieldset>
+</div>
\ No newline at end of file
diff --git a/collections/misc/collprofiles.php b/collections/misc/collprofiles.php
index dd6b5af49..2ab64db87 100644
--- a/collections/misc/collprofiles.php
+++ b/collections/misc/collprofiles.php
@@ -5,6 +5,7 @@ else include_once($SERVER_ROOT . '/content/lang/collections/misc/collprofiles.en
 include_once($SERVER_ROOT . '/classes/OccurrenceCollectionProfile.php');
 include_once($SERVER_ROOT . '/classes/OccurrenceEditorManager.php');
 include_once($SERVER_ROOT . '/classes/utilities/GeneralUtil.php');
+include_once($SERVER_ROOT.'/classes/OccurrenceEditorDeterminations.php');
 
 header('Content-Type: text/html; charset=' . $CHARSET);
 unset($_SESSION['editorquery']);
@@ -32,7 +33,23 @@ if ($SYMB_UID) {
 		elseif (array_key_exists('CollEditor', $USER_RIGHTS) && in_array($collid, $USER_RIGHTS['CollEditor'])) $editCode = 1;
 	}
 }
+
+// For quick entry form 
+$occManager = new OccurrenceEditorDeterminations();
+
+// get image ids from the images table
+$imgIDs = $occManager->getImgIDs();
+$firstImgId = $imgIDs[0];
+$firstBarcode = $occManager->getBarcode($firstImgId);
+$firstIndex = 0;
+$lastImgId = end($imgIDs);
+$lastBarcode = $occManager->getBarcode($lastImgId);
+$lastIndex = count($imgIDs) - 1;
+$imgNum = count($imgIDs);
+$occData = array();
+$barcode = $occManager->getBarcode($firstIndex);
 ?>
+
 <!DOCTYPE html>
 <html lang="<?php echo $LANG_TAG ?>">
 <head>
@@ -360,6 +377,12 @@ if ($SYMB_UID) {
 									<?= $LANG['EDIT_EXISTING'] ?>
 								</a>
 							</li>
+							<!-- add the link to quick entry form -->
+							<li>
+								<a href="../quickentry/occurrencequickentry.php?csmode=0&collid=<?= $collid ?>&&imgid=<?= $firstImgId ?>&imgindex=1&barcode=0&occid=5639&occindex=1">
+									<?= $LANG['QUICK_ENTRY_FORM'] ?>
+								</a>
+							</li>
 							<li>
 								<a href="../editor/batchdeterminations.php?collid=<?= $collid ?>">
 									<?= $LANG['ADD_BATCH_DETER'] ?>
diff --git a/collections/quickentry/occurrencequickentry.php b/collections/quickentry/occurrencequickentry.php
new file mode 100644
index 000000000..522ebbfb1
--- /dev/null
+++ b/collections/quickentry/occurrencequickentry.php
@@ -0,0 +1,1105 @@
+<?php
+include_once('../../config/symbini.php');
+include_once($SERVER_ROOT.'/content/lang/collections/editor/occurrenceeditor.'.$LANG_TAG.'.php');
+
+header("Content-Type: text/html; charset=".$CHARSET);
+
+$occId = array_key_exists('occid',$_REQUEST)?$_REQUEST['occid']:'';
+$collId = array_key_exists('collid',$_REQUEST)?$_REQUEST['collid']:false;
+$tabTarget = array_key_exists('tabtarget',$_REQUEST)?$_REQUEST['tabtarget']:0;
+$goToMode = array_key_exists('gotomode',$_REQUEST)?$_REQUEST['gotomode']:0;
+$occIndex = array_key_exists('occindex',$_REQUEST)?$_REQUEST['occindex']:false;
+$crowdSourceMode = array_key_exists('csmode',$_REQUEST)?$_REQUEST['csmode']:0;
+$action = array_key_exists('submitaction',$_REQUEST)?$_REQUEST['submitaction']:'';
+if(!$action && array_key_exists('carryover',$_REQUEST)) $goToMode = 2;
+
+//Create Occurrence Manager
+$occManager = null;
+if(strpos($action,'Determination') || strpos($action,'Verification')){
+	include_once($SERVER_ROOT.'/classes/OccurrenceEditorDeterminations.php');
+	$occManager = new OccurrenceEditorDeterminations();
+}
+elseif(strpos($action,'Image')){
+	include_once($SERVER_ROOT.'/classes/OccurrenceEditorImages.php');
+	$occManager = new OccurrenceEditorImages();
+}
+else{
+	include_once($SERVER_ROOT.'/classes/OccurrenceEditorManager.php');
+	$occManager = new OccurrenceEditorManager();
+}
+
+if($crowdSourceMode){
+	$occManager->setCrowdSourceMode(1);
+}
+
+// get all image ids from the images table
+$imgIDs = $occManager->getImgIDs();
+$firstImgId = $imgIDs[0];
+$firstBarcode = $occManager->getBarcode($firstImgId);
+$firstIndex = 0;
+$lastImgId = end($imgIDs);
+$lastBarcode = $occManager->getBarcode($lastImgId);
+$lastIndex = count($imgIDs) - 1;
+$imgNum = count($imgIDs);
+$currentImgId = $_REQUEST['imgid'];
+$currentImgIndex = $_REQUEST['imgindex'];
+$occData = array();
+// occData is a hashtable, which has imgid as key, and occid as value
+foreach ($imgIDs as $imgID) {
+	$occData[$imgID] = $occManager->getOneOccID($imgID);
+}
+$firstOccId = $occData[$firstImgId];
+$lastOccId = $occData[$lastImgId];
+$barcode = $occManager->getBarcode($currentImgId);
+
+//Sanitation
+if(!is_numeric($occId)) $occId = '';
+if(!is_numeric($collId)) $collId = false;
+if(!is_numeric($tabTarget)) $tabTarget = 0;
+if(!is_numeric($goToMode)) $goToMode = 0;
+if(!is_numeric($occIndex)) $occIndex = false;
+if(!is_numeric($crowdSourceMode)) $crowdSourceMode = 0;
+$action = filter_var($action,FILTER_SANITIZE_STRING);
+
+$displayQuery = 0;
+$isGenObs = 0;
+$collMap = Array();
+$collType = 'spec';
+$occArr = array();
+$imgArr = array();
+$specImgArr = array();
+$fragArr = array();
+$qryCnt = false;
+$moduleActivation = array();
+$statusStr = '';
+$navStr = '';
+$isEditor = 0;
+
+if($SYMB_UID){
+	//Set variables
+	$occManager->setOccId($occId);
+	$occManager->setCollId($collId);
+	$collMap = $occManager->getCollMap();
+	if($collId && isset($collMap['collid']) && $collId != $collMap['collid']){
+		$collId = $collMap['collid'];
+		$occManager->setCollId($collId);
+	}
+	if($collMap){
+		if($collMap['colltype']=='General Observations'){
+			$isGenObs = 1;
+			$collType = 'obs';
+		}
+		elseif($collMap['colltype']=='Observations'){
+			$collType = 'obs';
+		}
+		$propArr = $occManager->getDynamicPropertiesArr();
+		if(isset($propArr['modules-panel'])){
+			foreach($propArr['modules-panel'] as $module){
+				if(isset($module['paleo']['status']) && $module['paleo']['status']) $moduleActivation[] = 'paleo';
+				elseif(isset($module['matSample']['status']) && $module['matSample']['status']){
+					$moduleActivation[] = 'matSample';
+					if($tabTarget > 3) $tabTarget++;
+				}
+			}
+		}
+	}
+	//Bring in config variables
+	if($isGenObs){
+		if(file_exists('includes/config/occurVarGenObs'.$SYMB_UID.'.php')){
+			//Specific to particular collection
+			include('includes/config/occurVarGenObs'.$SYMB_UID.'.php');
+		}
+		elseif(file_exists('includes/config/occurVarGenObsDefault.php')){
+			//Specific to Default values for portal
+			include('includes/config/occurVarGenObsDefault.php');
+		}
+	}
+	else{
+		if($collId && file_exists('includes/config/occurVarColl'.$collId.'.php')){
+			//Specific to particular collection
+			include('includes/config/occurVarColl'.$collId.'.php');
+		}
+		elseif(file_exists('includes/config/occurVarDefault.php')){
+			//Specific to Default values for portal
+			include('includes/config/occurVarDefault.php');
+		}
+		if($crowdSourceMode && file_exists('includes/config/crowdSourceVar.php')){
+			//Specific to Crowdsourcing
+			include('includes/config/crowdSourceVar.php');
+		}
+	}
+
+	//0 = not editor, 1 = admin, 2 = editor, 3 = taxon editor, 4 = crowdsource editor or collection allows public edits
+	//If not editor, edits will be submitted to omoccuredits table but not applied to omoccurrences
+	if($IS_ADMIN || ($collId && array_key_exists('CollAdmin',$USER_RIGHTS) && in_array($collId,$USER_RIGHTS['CollAdmin']))){
+		$isEditor = 1;
+	}
+	else{
+		if($isGenObs){
+			if(!$occId && array_key_exists('CollEditor',$USER_RIGHTS) && in_array($collId,$USER_RIGHTS['CollEditor'])){
+				//Approved General Observation editors can add records
+				$isEditor = 2;
+			}
+			elseif($action){
+				//Lets assume that Edits where submitted and they remain on same specimen, user is still approved
+				 $isEditor = 2;
+			}
+			elseif($occManager->getObserverUid() == $SYMB_UID){
+				//Users can edit their own records
+				$isEditor = 2;
+			}
+		}
+		elseif(array_key_exists('CollEditor',$USER_RIGHTS) && in_array($collId,$USER_RIGHTS['CollEditor'])){
+			//Is an assigned editor for this collection
+			$isEditor = 2;
+		}
+		elseif($crowdSourceMode && $occManager->isCrowdsourceEditor()){
+			//Is a crowdsourcing editor (CS status is open (=0) or CS status is pending (=5) and active user was original editor
+			$isEditor = 4;
+		}
+		elseif($collMap && $collMap['publicedits']){
+			//Collection is set as allowing public edits
+			$isEditor = 4;
+		}
+		elseif(array_key_exists('CollTaxon',$USER_RIGHTS) && $occId){
+			//Check to see if this user is authorized to edit this occurrence given their taxonomic editing authority
+			$isEditor = $occManager->isTaxonomicEditor();
+		}
+	}
+	include_once 'editProcessor.php';
+	if($action == 'saveOccurEdits'){
+		$statusStr = $occManager->editOccurrence($_POST,$isEditor);
+	} 
+	// save TODO: need to update this correctly
+	elseif ($action == 'saveOCR'){
+		$statusStr = $occManager->editOccurrence($_POST,$isEditor);
+	}
+	if($isEditor){
+		//Available to full editors and taxon editors
+		if($action == 'submitDetermination'){
+			//Adding a new determination
+			$statusStr = $occManager->addDetermination($_POST,$isEditor);
+			$tabTarget = 1;
+		}
+		elseif($action == 'submitDeterminationEdit'){
+			$statusStr = $occManager->editDetermination($_POST);
+			$tabTarget = 1;
+		}
+		elseif($action == 'Delete Determination'){
+			$statusStr = $occManager->deleteDetermination($_POST['detid']);
+			$tabTarget = 1;
+		}
+		//Only full editors can perform following actions
+		if($isEditor == 1 || $isEditor == 2){
+			if($action == 'addOccurRecord'){
+				if($occManager->addOccurrence($_POST)){
+					$occManager->setQueryVariables();
+					$qryCnt = $occManager->getQueryRecordCount();
+					$qryCnt++;
+					if($goToMode) $occIndex = $qryCnt;			//Go to new record
+					else $occId = $occManager->getOccId();		//Stay on record and get $occId
+				}
+				else $statusStr = $occManager->getErrorStr();
+			}
+			elseif($action == 'Delete Occurrence'){
+				if($occManager->deleteOccurrence($occId)){
+					$occId = 0;
+					$occManager->setOccId(0);
+				}
+				else $statusStr = $occManager->getErrorStr();
+			}
+			elseif($action == 'Transfer Record'){
+				$transferCollid = $_POST['transfercollid'];
+				if($transferCollid){
+					if($occManager->transferOccurrence($occId,$transferCollid)){
+						if(!isset($_POST['remainoncoll']) || !$_POST['remainoncoll']){
+							$occManager->setCollId($transferCollid);
+							$collId = $transferCollid;
+							$collMap = $occManager->getCollMap();
+						}
+					}
+					else{
+						$statusStr = $occManager->getErrorStr();
+					}
+				}
+			}
+			elseif($action == 'cloneRecord'){
+				$cloneArr = $occManager->cloneOccurrence($_POST);
+				if($cloneArr){
+					$statusStr = (isset($LANG['CLONES_CREATED'])?$LANG['CLONES_CREATED']:'Success! The following new clone record(s) have been created').' ';
+					$statusStr .= '<div style="margin:5px 10px;color:black">';
+					$statusStr .= '<div><a href="occurrenceeditor.php?occid='.$occId.'" target="_blank">#'.$occId.'</a> - '.(isset($LANG['CLONE_SOURCE'])?$LANG['CLONE_SOURCE']:'clone source').'</div>';
+					$occId = current($cloneArr);
+					$occManager->setOccId($occId);
+					foreach($cloneArr as $cloneOccid){
+						if($cloneOccid==$occId) $statusStr .= '<div>#'.$cloneOccid.' - '.(isset($LANG['THIS_RECORD'])?$LANG['THIS_RECORD']:'this record').'</div>';
+						else $statusStr .= '<div><a href="occurrenceeditor.php?occid='.$cloneOccid.'" target="_blank">#'.$cloneOccid.'</a></div>';
+					}
+					$statusStr .= '</div>';
+					if(isset($_POST['targetcollid']) && $_POST['targetcollid'] && $_POST['targetcollid'] != $collId){
+						$collId = $_POST['targetcollid'];
+						$occManager->setCollId($collId);
+						$collMap = $occManager->getCollMap();
+					}
+					$occManager->setQueryVariables(array('eb'=>$PARAMS_ARR['un'],'de'=>date('Y-m-d')));
+					$qryCnt = $occManager->getQueryRecordCount();
+					$occIndex = $qryCnt - count($cloneArr);
+				}
+			}
+			elseif($action == 'Submit Image Edits'){
+				$occManager->editImage($_POST);
+				if($errArr = $occManager->getErrorArr()){
+					if(isset($errArr['web'])){
+						if(!$errArr['web']) $statusStr .= $LANG['ERROR_UPDATING_IMAGE'].': web image<br />';
+					}
+					if(isset($errArr['tn'])){
+						if(!$errArr['tn']) $statusStr .= $LANG['ERROR_UPDATING_IMAGE'].': thumbnail<br />';
+					}
+					if(isset($errArr['orig'])){
+						if(!$errArr['orig']) $statusStr .= $LANG['ERROR_UPDATING_IMAGE'].': large image<br />';
+					}
+					if(isset($errArr['error'])) $statusStr .= $LANG['ERROR_EDITING_IMAGE'].': '.$errArr['error'];
+				}
+				$tabTarget = 2;
+			}
+			elseif($action == 'Submit New Image'){
+				if($occManager->addImage($_POST)){
+					$statusStr = (isset($LANG['IMAGE_ADD_SUCCESS'])?$LANG['IMAGE_ADD_SUCCESS']:'Image added successfully');
+					$tabTarget = 2;
+				}
+				if($occManager->getErrorStr()){
+					$statusStr .= $occManager->getErrorStr();
+				}
+			}
+			elseif($action == 'Delete Image'){
+				$removeImg = (array_key_exists('removeimg',$_POST)?$_POST['removeimg']:0);
+				if($occManager->deleteImage($_POST["imgid"], $removeImg)){
+					$statusStr = (isset($LANG['IMAGE_DEL_SUCCESS'])?$LANG['IMAGE_DEL_SUCCESS']:'Image deleted successfully');
+					$tabTarget = 2;
+				}
+				else{
+					$statusStr = $occManager->getErrorStr();
+				}
+			}
+			elseif($action == 'Remap Image'){
+				if($occManager->remapImage($_POST['imgid'], $_POST['targetoccid'])){
+					$statusStr = (isset($LANG['IMAGE_REMAP_SUCCESS'])?$LANG['IMAGE_REMAP_SUCCESS']:'SUCCESS: Image remapped to record').' <a href="occurrenceeditor.php?occid='.$_POST["targetoccid"].'" target="_blank">'.$_POST["targetoccid"].'</a>';
+				}
+				else{
+					$statusStr = (isset($LANG['IMAGE_REMAP_ERROR'])?$LANG['IMAGE_REMAP_ERROR']:'ERROR linking image to new specimen').': '.$occManager->getErrorStr();
+				}
+			}
+			elseif($action == 'remapImageToNewRecord'){
+				$newOccid = $occManager->remapImage($_POST['imgid'], 'new');
+				if($newOccid){
+					$statusStr = (isset($LANG['IMAGE_REMAP_SUCCESS'])?$LANG['IMAGE_REMAP_SUCCESS']:'SUCCESS: Image remapped to record').' <a href="occurrenceeditor.php?occid='.$newOccid.'" target="_blank">'.$newOccid.'</a>';
+				}
+				else{
+					$statusStr = (isset($LANG['NEW_IMAGE_ERROR'])?$LANG['NEW_IMAGE_ERROR']:'ERROR linking image to new blank specimen').': '.$occManager->getErrorStr();
+				}
+			}
+			elseif($action == "Disassociate Image"){
+				if($occManager->remapImage($_POST["imgid"])){
+					$statusStr = (isset($LANG['DISASS_SUCCESS'])?$LANG['DISASS_SUCCESS']:'SUCCESS disassociating image').' <a href="../../imagelib/imgdetails.php?imgid='.$_POST["imgid"].'" target="_blank">#'.$_POST["imgid"].'</a>';
+				}
+				else{
+					$statusStr = (isset($LANG['DISASS_ERORR'])?$LANG['DISASS_ERORR']:'ERROR disassociating image').': '.$occManager->getErrorStr();
+				}
+
+			}
+			elseif($action == "Apply Determination"){
+				$makeCurrent = 0;
+				if(array_key_exists('makecurrent',$_POST)) $makeCurrent = 1;
+				$statusStr = $occManager->applyDetermination($_POST['detid'],$makeCurrent);
+				$tabTarget = 1;
+			}
+			elseif($action == "Make Determination Current"){
+				$statusStr = $occManager->makeDeterminationCurrent($_POST['detid']);
+				$tabTarget = 1;
+			}
+			elseif($action == "Submit Verification Edits"){
+				$statusStr = $occManager->editIdentificationRanking($_POST['confidenceranking'],$_POST['notes']);
+				$tabTarget = 1;
+			}
+			elseif($action == 'Link to Checklist as Voucher'){
+				$statusStr = $occManager->linkChecklistVoucher($_POST['clidvoucher'],$_POST['tidvoucher']);
+			}
+			elseif($action == 'deletevoucher'){
+				$statusStr = $occManager->deleteChecklistVoucher($_REQUEST['delclid']);
+			}
+			elseif($action == 'editgeneticsubmit'){
+				$statusStr = $occManager->editGeneticResource($_POST);
+			}
+			elseif($action == 'deletegeneticsubmit'){
+				$statusStr = $occManager->deleteGeneticResource($_POST['genid']);
+			}
+			elseif($action == 'addgeneticsubmit'){
+				$statusStr = $occManager->addGeneticResource($_POST);
+			}
+		}
+	}
+
+	// save TODO: need to update this correctly
+	// if ($action == 'SaveOCR') {	
+	// 	// Save parsed OCR results into ocr_results table
+	// 	// $statusStr = $occManager->editOccurrence($_POST,$isEditor);
+	// 	$ocrSaved = $occManager->saveOCRResultsToDB(
+	// 		$_POST['imgid'],
+	// 		$_POST['collid'],
+	// 		$_POST['rawtext']
+	// 	);
+	
+	// 	if (!$ocrSaved) {
+	// 		error_log("Failed to save OCR results: " . implode("; ", $occManager->errorArr));
+	// 	}
+	// }
+
+	if($goToMode){
+		//Adding new record, override query form and prime for current user's dataentry for the day
+		$occId = 0;
+		$occManager->setQueryVariables(array('eb'=>$PARAMS_ARR['un'],'de'=>date('Y-m-d')));
+		if(!$qryCnt){
+			$qryCnt = $occManager->getQueryRecordCount();
+			$occIndex = $qryCnt;
+		}
+	}
+	if(is_numeric($occIndex)){
+		//Query Form has been activated
+		$occManager->setQueryVariables();
+		if($action == 'Delete Occurrence'){
+			//Reset query form index to one less, unless it's already 1, then just reset
+			$qryCnt = $occManager->getQueryRecordCount();		//Value won't be returned unless set in cookies in previous query
+			if($qryCnt > 1){
+				if(($occIndex + 1) >= $qryCnt) $occIndex = $qryCnt - 2;
+				$qryCnt--;
+			}
+			else{
+				unset($_SESSION['editorquery']);
+				$occIndex = false;
+			}
+		} 
+		// save TODO: need to update this correctly
+		elseif($action == 'saveOccurEdits'){
+			//Get query count and then reset; don't use new count for this display
+			$qryCnt = $occManager->getQueryRecordCount();
+			$occManager->getQueryRecordCount(1);
+		}
+		else{
+			$qryCnt = $occManager->getQueryRecordCount();
+		}
+	}
+	elseif(isset($_SESSION['editorquery'])){
+		//Make sure query variables are null
+		unset($_SESSION['editorquery']);
+	}
+	$occManager->setOccIndex($occIndex);
+
+	if($occId || (!$goToMode && $occIndex !== false)){
+		$oArr = $occManager->getOccurMap();
+		if($oArr){
+			$occId = $occManager->getOccId();
+			$occArr = $oArr[$occId];
+			$occIndex = $occManager->getOccIndex();
+			if(!$collMap){
+				$collMap = $occManager->getCollMap();
+				if(!$isEditor){
+					if(isset($USER_RIGHTS["CollAdmin"]) && in_array($collMap['collid'],$USER_RIGHTS["CollAdmin"])){
+						$isEditor = 1;
+					}
+					elseif(isset($USER_RIGHTS["CollEditor"]) && in_array($collMap['collid'],$USER_RIGHTS["CollEditor"])){
+						$isEditor = 1;
+					}
+				}
+			}
+		}
+	}
+	elseif($goToMode == 2) $occArr = $occManager->carryOverValues($_REQUEST);
+	if(!$isEditor && $crowdSourceMode && $occManager->isCrowdsourceEditor()) $isEditor = 4;
+
+	$barcodeHashTable = array();
+	$occIdHashTable = array();
+
+	for ($i = 0; $i < $imgNum; $i++) {
+		$tempImgId = $imgIDs[$i];
+		$tempBarcode = $occManager->getBarcode($tempImgId);
+		$tempoccId = $occManager->getOneOccID($tempImgId);
+	
+		$pageNumber = $i + 1;
+		$barcodeHashTable[$pageNumber] = $tempBarcode;
+		$occIdHashTable[$pageNumber] = $tempoccId;
+	}
+
+	// TODO: check here for navigation functionality examples
+	if($currentImgIndex > 0) {
+		$prevImgid = $imgIDs[$currentImgIndex-1];
+		$prevOccid = !empty($occManager->getOneOccID($prevImgid)) ? ($occManager->getOneOccID($prevImgid)) : 0;
+		$prevBarcode = !empty($occManager->getBarcode($prevImgid)) ? ($occManager->getBarcode($prevImgid)) : 0;
+	}
+
+	if($currentImgIndex < $imgNum-1){
+		$nextImgid = $imgIDs[$currentImgIndex+1];
+		$nextOccid = !empty($occManager->getOneOccID($nextImgid)) ? ($occManager->getOneOccID($nextImgid)) : 0;
+		$nextBarcode = !empty($occManager->getBarcode($nextImgid)) ? ($occManager->getBarcode($nextImgid)) : 0;
+	}
+
+	if($imgNum !== false){
+		$navStr = '<b>';
+		if($currentImgIndex > 0) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($firstImgId).', '.($firstIndex).', '.($firstOccId).', '.($firstIndex).')" title="'.(isset($LANG['FIRST_REC'])?$LANG['FIRST_REC']:'First Record').'">';
+		$navStr .= '|&lt;';
+		if($currentImgIndex > 0) $navStr .= '</a>';
+		$navStr .= '&nbsp;&nbsp;&nbsp;&nbsp;';
+		if($currentImgIndex > 0) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($prevImgid).', '.($currentImgIndex-1).', '.($prevOccid).', '.($currentImgIndex-1).')" title="'.(isset($LANG['PREV_REC']) ? $LANG['PREV_REC'] : 'Previous Record').'">';
+		$navStr .= '&lt;&lt;';
+		if($currentImgIndex > 0) $navStr .= '</a>';
+		$recIndex = ($currentImgIndex<$imgNum?($currentImgIndex + 1):'*');
+		$navStr .= '&nbsp;&nbsp;| '.($recIndex).' of '.($imgNum).' |&nbsp;&nbsp;';
+		if ($currentImgIndex < $imgNum-1) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($nextImgid).', '.($currentImgIndex+1).', '.($nextOccid).', '.($currentImgIndex+1).')" title="'.(isset($LANG['NEXT_REC']) ? $LANG['NEXT_REC']:'Next Record').'">';
+		$navStr .= '&gt;&gt;';
+		if($occIndex<$imgNum-1) $navStr .= '</a>';
+		$navStr .= '&nbsp;&nbsp;&nbsp;&nbsp;';
+		if($occIndex<$imgNum-1) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($lastImgId).', '.($imgNum-1).', '.($lastOccId).', '.($imgNum-1).')" title="'.(isset($LANG['LAST_REC'])?$LANG['LAST_REC']:'Last Record').'">';
+		$navStr .= '&gt;|';
+		if($occIndex<$imgNum-1) $navStr .= '</a> ';
+		$navStr .= '</b>';
+	}
+
+	if(isset($_POST['jump']) && $_POST['jump'] !== '') {
+		$jumpIndex = intval($_POST['jump']);
+		if($jumpIndex >= 0 && $jumpIndex < $qryCnt) {
+		  $occIndex = $jumpIndex;
+		}
+	  }
+
+	//Images and other things needed for OCR
+	$specImgArr = $occManager->getImageInfo();
+	if($specImgArr){
+		$imgUrlPrefix = (isset($IMAGE_DOMAIN)?$IMAGE_DOMAIN:'');
+		$imgCnt = 1;
+		foreach($specImgArr as $imgId => $i2){
+			$iUrl = $i2['origurl'];
+			if($iUrl == 'empty' && $i2['origurl']) $iUrl = $i2['origurl'];
+			if($imgUrlPrefix && substr($iUrl,0,4) != 'http') $iUrl = $imgUrlPrefix.$iUrl;
+			$imgArr[$imgCnt]['imgid'] = $imgId;
+			$imgArr[$imgCnt]['web'] = $iUrl;
+			if($i2['origurl']){
+				$lgUrl = $i2['origurl'];
+				if($imgUrlPrefix && substr($lgUrl,0,4) != 'http') $lgUrl = $imgUrlPrefix.$lgUrl;
+				$imgArr[$imgCnt]['lg'] = $lgUrl;
+			}
+			if(isset($i2['error'])) $imgArr[$imgCnt]['error'] = $i2['error'];
+			$imgCnt++;
+		}
+	}
+
+	$isLocked = false;
+	if($occId) $isLocked = $occManager->getLock();
+
+	// collect image arrays
+	$imgidCollection = [];
+	$imgUrlCollection = [];
+	foreach ($imgArr as $item) {
+		$imgidCollection[] = $item['imgid'];
+		$imgUrlCollection[] = $item['web'];
+	}
+	$totalImage = count($imgidCollection);
+}
+else{
+	header('Location: ../../profile/index.php?refurl=../collections/editor/occurrenceeditor.php?'.htmlspecialchars($_SERVER['QUERY_STRING'], ENT_QUOTES));
+}
+?>
+<html>
+	<head>
+		<meta http-equiv="Content-Type" content="text/html; charset=<?php echo $CHARSET; ?>">
+		<title><?php echo $DEFAULT_TITLE.' '.(isset($LANG['OCCEDITOR'])?$LANG['OCCEDITOR']:'Occurrence Editor'); ?></title>
+		<link href="<?php echo $CSS_BASE_PATH; ?>/jquery-ui.css" type="text/css" rel="stylesheet">
+		<link rel="stylesheet" href="../../css/symbiota/quickentry.css" type="text/css">
+		<script src="<?php echo $CLIENT_ROOT; ?>/js/jquery-3.7.1.min.js" type="text/javascript"></script>
+		<script src="<?php echo $CLIENT_ROOT; ?>/js/jquery-ui.min.js" type="text/javascript"></script>
+		<script type="text/javascript">
+			var collId = "<?php echo (isset($collMap['collid'])?$collMap['collid']:(is_numeric($collId)?$collId:0)); ?>";
+			var csMode = "<?php echo $crowdSourceMode; ?>";
+			var tabTarget = <?php echo (is_numeric($tabTarget)?$tabTarget:'0'); ?>;
+			var imgArr = [];
+			var imgLgArr = [];
+			var localityAutoLookup = <?php echo (defined('LOCALITYAUTOLOOKUP') && !LOCALITYAUTOLOOKUP?'0':'1'); ?>;
+
+			<?php
+			if($imgArr){
+				foreach($imgArr as $iCnt => $iArr){
+					echo 'imgArr['.$iCnt.'] = "'.$iArr['web'].'";'."\n";
+					if(isset($iArr['lg'])) echo 'imgLgArr['.$iCnt.'] = "'.$iArr['lg'].'";'."\n";
+				}
+			}
+			?>
+
+			$(document).ready(function() {
+				<?php
+				if(!defined('CATNUMDUPECHECK') || CATNUMDUPECHECK) echo '$("#catalognumber").on("change", function(e) { searchCatalogNumber(this.form,true); });'."\n";
+				if(!defined('OTHERCATNUMDUPECHECK') || OTHERCATNUMDUPECHECK) echo '$("input[name=\'idvalue[]\']").on("change", function(e) { searchOtherCatalogNumbers(this); });'."\n";
+				?>
+			});
+
+			function requestImage(){
+				$.ajax({
+					type: "POST",
+					url: 'rpc/makeactionrequest.php',
+					data: { <?php echo ' occid: '.$occManager->getOccId(); ?>, requesttype: 'Image' },
+					success: function( response ) {
+					$('div#imagerequestresult').html(response);
+					}
+				});
+			}
+			function navigateToRecordNew(crowdSourceMode, gotomode, collId, imgId, imgIndex, occId, occIndex) {
+				if(occId == null) {
+					var url = 'occurrencequickentry.php?gotomode=' + gotomode + '&collid=' + collId + '&imgid=' + imgId + '&imgindex=' + imgIndex;
+				} else {
+					var url = 'occurrencequickentry.php?csmode=' + crowdSourceMode + '&collid=' + collId + '&imgid=' + imgId + '&imgindex=' + imgIndex + '&occid=' + occId + '&occindex=' + occIndex;
+				}
+				window.location.href = url;
+				event.preventDefault();
+			}
+		</script>
+		<script src="../../js/symb/collections.coordinateValidation.js?ver=2" type="text/javascript"></script>
+		<script src="../../js/symb/wktpolygontools.js?ver=2" type="text/javascript"></script>
+		<script src="../../js/symb/collections.georef.js?ver=2" type="text/javascript"></script>
+		<script src="../../js/symb/collections.editor.main.js?ver=3" type="text/javascript"></script>
+		<script src="../../js/symb/collections.editor.tools.js?ver=4" type="text/javascript"></script>
+		<script src="../../js/symb/collections.editor.imgtools.js?ver=3" type="text/javascript"></script>
+		<script src="../../js/jquery.imagetool-1.7.js?ver=140310" type="text/javascript"></script>
+		<script src="../../js/symb/collections.editor.query.js?ver=6" type="text/javascript"></script>
+		<script>
+			var record_created_utc = '<?php echo $occArr['modified']; ?>';
+			var last_modified_utc = '<?php echo $occArr['dateLastModified']; ?>';
+			var userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
+
+			// Function to convert UTC time to user's timezone
+			function convertTimeToUserTimezone(utcTimestamp) {
+				if (!utcTimestamp) {
+					return "No timestamp provided";
+				}
+				var date = new Date(utcTimestamp);
+				var offset = date.getTimezoneOffset() * 60000; // Offset in milliseconds
+				var userLocalTime = new Date(date.getTime() - offset);
+				var options = { timeZone: userTimezone };
+				return userLocalTime.toLocaleString('en-US', options);
+			}
+
+			// Convert and set the adjusted timestamp in the input field
+			document.addEventListener('DOMContentLoaded', function() {
+				// Convert UTC to user's timezone and update display element
+				var modifiedDisplayElement = document.getElementById('displayModified');
+				modifiedDisplayElement.textContent = convertTimeToUserTimezone(record_created_utc);
+
+				var lastModifiedElement = document.getElementById('lastModified');
+				lastModifiedElement.textContent = 'Last Modified: ' + convertTimeToUserTimezone(last_modified_utc);
+			});
+
+			var barcodeHashTable = <?php echo json_encode($barcodeHashTable); ?>;
+			var occIdHashTable = <?php echo json_encode($occIdHashTable); ?>;
+			function jumpToPage() {
+				// Get the page number from the input field
+				var pageNumberInput = document.getElementById("pageNumber");
+    			var pageNumber = parseInt(pageNumberInput.value);
+				var imgids = <?php echo json_encode($imgIDs); ?>;
+
+				// Check if the page number is a valid key in the hash tables
+				if (pageNumber in barcodeHashTable && pageNumber in occIdHashTable) {
+					// Get the barcode and occid based on the page number
+					var barcode = barcodeHashTable[pageNumber];
+					var occId = occIdHashTable[pageNumber];
+					var imgId = imgids[pageNumber-1] 
+					var crowdSourceMode = <?php echo $crowdSourceMode; ?>;
+					var gotomode = <?php echo $goToMode; ?>;
+					var collId = <?php echo $collId; ?>;
+					var occIndex = pageNumber - 1; 
+
+					// Call the navigateToRecordNew function with the calculated parameters
+					navigateToRecordNew(crowdSourceMode, gotomode, collId, imgId, occIndex, occId, occIndex);
+				} else {
+					// Handle invalid page number input
+					alert(pageNumber);
+				}
+			}
+		</script>
+	</head>
+<body>
+	<div>
+		<div id="top">
+			<div id="titleDiv">
+				<h2>
+				<?php
+					if($collMap) echo $collMap['collectionname'].' ('.$collMap['institutioncode'].($collMap['collectioncode']?':'.$collMap['collectioncode']:'').')'; 
+				?>
+				</h2>
+			</div>
+			<?php
+			if($isEditor && ($occId || ($collId && $isEditor < 3))){
+				if(!$occArr && !$goToMode) $displayQuery = 1;
+				include 'includes/queryform.php';
+				?>
+				<h2>
+				<?php
+					echo("text");
+					echo($institutionCode);
+				?>
+				</h2>
+				<!-- this is nav bar division Home>>collection management>>... -->
+				<div id="navDiv">
+					<?php
+					if($navStr){
+						?>
+						<div style="float:right;">
+							<?php echo $navStr; ?>
+						</div>
+						<?php
+					}
+					if(isset($collections_editor_occurrenceeditorCrumbs)){
+						if($collections_editor_occurrenceeditorCrumbs){
+							?>
+							<div class="navpath">
+								<a href='../../index.php'><?php echo (isset($LANG['HOME'])?$LANG['Home']:'Home'); ?></a> &gt;&gt;
+								<?php
+								echo $collections_editor_occurrenceeditorCrumbs;
+								echo '<b>'.(isset($LANG['EDITOR'])?$LANG['EDITOR']:'Editor').'</b>';
+								?>
+							</div>
+							<?php
+						}
+					}
+					else{
+						?>
+						<div class='navpath'>
+							<a href="../../index.php" onclick="return verifyLeaveForm()"><?php echo (isset($LANG['HOME'])?$LANG['HOME']:'Home'); ?></a> &gt;&gt;
+							<?php
+							if($crowdSourceMode){
+								?>
+								<a href="../specprocessor/crowdsource/index.php"><?php echo (isset($LANG['CENTRAL_CROWD'])?$LANG['CENTRAL_CROWD']:'Crowd Source Central'); ?></a> &gt;&gt;
+								<?php
+							}
+							else{
+								if($isGenObs){
+									?>
+									<a href="../../profile/viewprofile.php?tabindex=1" onclick="return verifyLeaveForm()"><?php echo (isset($LANG['PERS_MANAGEMENT'])?$LANG['PERS_MANAGEMENT']:'Personal Management'); ?></a> &gt;&gt;
+									<?php
+								}
+								else{
+									if($isEditor == 1 || $isEditor == 2){
+										?>
+										<a href="../misc/collprofiles.php?collid=<?php echo $collId; ?>&emode=1" onclick="return verifyLeaveForm()"><?php echo (isset($LANG['COL_MANAGEMENT'])?$LANG['COL_MANAGEMENT']:'Collection Management'); ?></a> &gt;&gt;
+										<?php
+									}
+								}
+							}
+							if($occId) echo '<a href="../individual/index.php?occid='.$occManager->getOccId().'">'.(isset($LANG['PUBLIC_DISPLAY'])?$LANG['PUBLIC_DISPLAY']:'Public Display').'</a> &gt;&gt;';
+							?>
+							<b><?php if($isEditor == 3) echo $LANG['TAXONOMIC_EDITOR']; ?></b>
+						</div>
+						<?php
+					}
+					?>
+				</div>
+
+			<?php
+				if($statusStr){
+					?>
+					<div id="statusdiv" style="margin:5px 0px 5px 15px;">
+						<b><?php echo (isset($LANG['ACTION_STATUS'])?$LANG['ACTION_STATUS']:'Action Status'); ?>: </b>
+						<span style="color:<?php echo (stripos($statusStr,'ERROR')!==false?'red':'green'); ?>;"><?php echo $statusStr; ?></span>
+						<?php
+						if($action == 'Delete Occurrence'){
+							?>
+							<br/>
+							<a href="#" style="margin:5px;" onclick="window.opener.location.href = window.opener.location.href;window.close();">
+								<?php echo (isset($LANG['RETURN_TO_SEARCH'])?$LANG['RETURN_TO_SEARCH']:'Return to Search Page'); ?>
+							</a>
+							<?php
+						}
+						?>
+					</div>
+					<?php
+				}
+			}?>
+		</div>
+		<div id="editdiv">
+			<div class = "row">
+				<section>
+					<div class="btn" name="jumpform">
+						<form method="post" style="margin: 5px;">
+							<button type="submit" name="toggle-button" value="<?php echo isset($_POST['toggle-button']) && $_POST['toggle-button'] === 'Minimal' ? 'Detailed' : 'Minimal'; ?>">
+								<?php echo isset($_POST['toggle-button']) ? $_POST['toggle-button'] : 'Detailed'; ?>
+							</button>
+							<button type="button" onclick="jumpToPage()">Jump to:</button>
+							<input type="number" id="pageNumber" size="3" />
+						</form>
+						<div id="jumpDiv">
+							<?php
+							if(isset($collections_editor_occurrenceeditorCrumbs)){
+								if($collections_editor_occurrenceeditorCrumbs){
+							?>
+								<div class="navpath">
+									<a href='../../index.php'><?php echo (isset($LANG['HOME'])?$LANG['Home']:'Home'); ?></a> &gt;&gt;
+									<?php
+									echo $collections_editor_occurrenceeditorCrumbs;
+									echo '<b>'.(isset($LANG['EDITOR'])?$LANG['EDITOR']:'Editor').'</b>';
+									?>
+								</div>
+								<?php
+								}
+							} ?>
+						</div>
+					</div>
+				</section> 
+				<form id="fullform" name="fullform" action="occurrencequickentry.php" method="post" onsubmit="return verifyFullForm(this);">
+					<!-- navigation bar -->
+					<!-- left part of the form starts -->
+					<div class = "column left">
+						<div class="field-block title">
+							<h3>Transcribe into Fields</h3>
+						</div>
+						<div class = "login-info" style = "background-color: #F2F2F2;">
+							<div class="field-block">
+								<span class="field-label"><?php echo (isset($LANG['BARCODE']) ? $LANG['BARCODE'] : 'Barcode'); ?></span>
+								<span class="field-elem">
+									<input type="text" size = '50' id="barcode" name="barcode" value="<?php echo($barcode) ?>" onchange="fieldChanged('barcode');" <?php if($isEditor > 2) echo 'disabled'; ?> autocomplete="off" />
+								</span>
+							</div>
+							<?php if(!isset($_POST['toggle-button']) || (isset($_POST['toggle-button']) && $_POST['toggle-button'] != 'Minimal')): ?>
+								<div class="field-block">
+									<span class="field-label"><?php echo (isset($LANG['ACCES_NUM']) ? $LANG['ACCES_NUM'] : 'Accession Num.'); ?></span>
+									<span class="field-elem">
+										<input type="text" size = '50' name="accesNum" value="<?php echo $occArr["accesNum"]; ?>" onchange="fieldChanged('accesNum');" />
+									</span>
+								</div>
+							<?php endif; ?>
+							<div id="filedUnderDiv" class="field-block">
+								<span class="field-label"><?php echo (isset($LANG['FILED_UNDER']) ? $LANG['FILED_UNDER'] : 'Filed Under'); ?></span>
+								<span class="field-elem">
+									<?php if(array_key_exists('filedUnder',$occArr)) { 
+										$filedUnderValue = isset($filedUnderDrop[$occArr["filedUnder"]]) ? $filedUnderDrop[$occArr["filedUnder"]] : null;
+									}
+									?>	
+									<input type="text" size="50" name="filedUnder" id="fffileunder" value="<?php echo array_key_exists('filedUnder',$occArr)?$occArr['filedUnder']:''; ?>" onchange="fieldChanged('filedUnder');" <?php if($isEditor > 2) echo 'disabled'; ?>/>
+								</span>
+							</div>
+							<div class="field-block">
+								<span class="field-label"><?php echo (isset($LANG['CURR_NAME']) ? $LANG['CURR_NAME'] : 'Current Name'); ?></span>
+								<span class="field-elem">
+									<input type="text" size = '50' name="currName" id="ffcurrname" value="<?php echo $occArr["currName"]; ?>" onchange="fieldChanged('currName');" />
+								</span>
+							</div>
+							<?php if(!isset($_POST['toggle-button']) || (isset($_POST['toggle-button']) && $_POST['toggle-button'] != 'Minimal')): ?>
+								<div class="field-block">
+									<span class="field-label"><?php echo (isset($LANG['IDQUALIFIER']) ? $LANG['IDQUALIFIER'] : 'ID Qualifier'); ?></span>
+									<span class="field-elem">
+										<select name="idQualifier" onchange="fieldChanged('idQualifier');">
+											<option value=""><?php echo $LANG['IDQUALIFIER']; ?>Select Your ID Qualifier</option>
+											<option value="">---------------------------------------</option>
+											<?php
+											$idqArr = array('s. str.', '?', 'not', 'cf.', 's. lat.', 'aff.');
+											foreach ($idqArr as $k) {
+												$selected = ($k == $occArr['idQualifier']) ? 'selected' : '';
+												echo '<option value="' . $k . '" ' . $selected . '>' . $k . '</option>' . "\n";
+											}
+											?>
+										</select>
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (defined('IDENTIFIEDBYLABEL')?IDENTIFIEDBYLABEL:'Identified By'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text"  maxlength="255" name="identifiedby" id="ffidentifiedby" value="<?php echo array_key_exists('identifiedby',$occArr)?$occArr['identifiedby']:''; ?>" onchange="fieldChanged('identifiedby');" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (defined('DATEIDENTIFIEDLABEL')?DATEIDENTIFIEDLABEL:'Date Identified'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="dateidentified" maxlength="45" value="<?php echo array_key_exists('dateidentified',$occArr)?$occArr['dateidentified']:''; ?>" onchange="fieldChanged('dateidentified');" />
+									</span>
+								</div>
+								<!-- There is a tab below is for determiation -->
+								<div class="field-block">
+									<span class="field-label"><?php echo (isset($LANG['DET_TEXT']) ? $LANG['DET_TEXT'] : 'Det. Text'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="detText" value="<?php echo $occArr["detText"]; ?>" onchange="fieldChanged('detText');" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (isset($LANG['PROVENANCE']) ? $LANG['PROVENANCE'] : 'Provenance'); ?></span>
+									<span class="field-elem">
+										<input type="text" size = '50' name="provenance" value="<?php echo $occArr["provenance"]; ?>" onchange="fieldChanged('provenance');" />
+									</span>
+								</div>
+							<?php endif; ?>
+							<div class="field-block">
+								<span class="field-label"><?php echo (defined('RECORDEDBYLABEL')?RECORDEDBYLABEL:'Collectors'); ?></span>
+								<span class="field-elem">
+									<input size = '50' type="text" name="recordedby" id="ffrecordedby" maxlength="255" value="<?php echo array_key_exists('recordedby',$occArr)?$occArr['recordedby']:''; ?>" onchange="fieldChanged('recordedby');" />
+								</span>
+							</div>
+							<!-- I put associated collectors here -->
+							<div class="field-block">
+								<span class="field-label"><?php echo (defined('ASSOCIATEDCOLLECTORSLABEL')?ASSOCIATEDCOLLECTORSLABEL:'Et al.'); ?></span>
+								<span class="field-elem">
+									<input size = '50' type="text" name="associatedcollectors" maxlength="255" value="<?php echo array_key_exists('associatedcollectors',$occArr)?$occArr['associatedcollectors']:''; ?>" onchange="fieldChanged('associatedcollectors');" />
+								</span>
+							</div>
+							<div class="field-block">
+								<span class="field-label"><?php echo (defined('RECORDNUMBERLABEL')?RECORDNUMBERLABEL:'Collector Number'); ?></span>
+								<span class="field-elem">
+									<input size = '50' type="text" name="recordnumber" maxlength="45" value="<?php echo array_key_exists('recordnumber',$occArr)?$occArr['recordnumber']:''; ?>" onchange="recordNumberChanged(this);" />
+								</span>
+							</div> 
+							<div class="field-block">
+								<span class="field-label"><?php echo (defined('EVENTDATELABEL')?EVENTDATELABEL:'Date Collected'); ?></span>
+								<span class="field-elem">
+									<input size = '50' type="text" name="eventdate" id="ffeventdate" value="<?php echo array_key_exists('eventdate',$occArr)?$occArr['eventdate']:''; ?>" onchange="eventDateChanged(this);" />
+								</span>
+							</div>
+							<div class="field-block">
+								<span class="field-label"><?php echo (defined('VERBATIMEVENTDATELABEL')?VERBATIMEVENTDATELABEL:'Verbatim Date'); ?></span>
+								<span class="field-elem">
+									<input size = '50' type="text" name="verbatimeventdate" maxlength="255" value="<?php echo array_key_exists('verbatimeventdate',$occArr)?$occArr['verbatimeventdate']:''; ?>" onchange="verbatimEventDateChanged(this)" />
+								</span>
+							</div>
+							<?php if(!isset($_POST['toggle-button']) || (isset($_POST['toggle-button']) && $_POST['toggle-button'] != 'Minimal')): ?>
+								<div class="field-block">
+									<span class="field-label"><?php echo (isset($LANG['CONTAINER']) ? $LANG['CONTAINER'] : 'Container'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="container" value="<?php echo $occArr["container"]; ?>" onchange="fieldChanged('container');" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (isset($LANG['COLL_TRIP']) ? $LANG['COLL_TRIP'] : 'Collecting Trip'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="collTrip" id="ffcolltrip" value="<?php echo $occArr["collTrip"]; ?>" onchange="fieldChanged('collTrip');" />
+									</span>
+								</div>
+							<?php endif; ?>
+							<div class="field-block">
+								<span class="field-label"><?php echo (isset($LANG['GEO_WITHIN']) ? $LANG['GEO_WITHIN'] : 'Geography Within'); ?></span>
+								<span class="field-elem">
+									<input size = '50' type="text" name="geoWithin" id="ffgeowithin" value="<?php echo $occArr["geoWithin"]; ?>" onchange="fieldChanged('geoWithin');" />
+								</span>
+							</div>
+							<div class="field-block">
+								<span class="field-label"><?php echo (isset($LANG['HIGH_GEO']) ? $LANG['HIGH_GEO'] : 'Higher Geography'); ?></span>
+								<span class="field-elem">
+									<input type="text" size = '50' name="highGeo" id="ffhighgeo" value="<?php echo $occArr["highGeo"]; ?>" onchange="fieldChanged('highGeo');" />
+								</span>
+							</div>
+							<?php if(!isset($_POST['toggle-button']) || (isset($_POST['toggle-button']) && $_POST['toggle-button'] != 'Minimal')): ?>
+								<div class="field-block">
+									<span class="field-label"><?php echo (defined('LOCALITYLABEL')?LOCALITYLABEL:'Verbatim Locality'); ?></span>
+									<span class="field-elem">
+										<input id="fflocality" type="text" size = '50'  onchange="fieldChanged('locality');" name="locality" value="<?php echo array_key_exists('locality',$occArr)?$occArr['locality']:''; ?>" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (defined('HABITATLABEL')?HABITATLABEL:'Habitat'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="habitat" value="<?php echo array_key_exists('habitat',$occArr)?$occArr['habitat']:''; ?>" onchange="fieldChanged('habitat');" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (isset($LANG['FREQUENCY']) ? $LANG['FREQUENCY'] : 'Frequency'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="frequency" value="<?php echo $occArr["frequency"]; ?>" onchange="fieldChanged('frequency');" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (defined('VERBATIMATTRIBUTESLABEL')?VERBATIMATTRIBUTESLABEL:'Description'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="verbatimattributes" value="<?php echo array_key_exists('verbatimattributes',$occArr)?$occArr['verbatimattributes']:''; ?>" onchange="fieldChanged('verbatimattributes');" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (defined('OCCURRENCEREMARKSLABEL')?OCCURRENCEREMARKSLABEL:'Remarks'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="occurrenceremarks" value="<?php echo array_key_exists('occurrenceremarks',$occArr)?$occArr['occurrenceremarks']:''; ?>" onchange="fieldChanged('occurrenceremarks');" title="<?php echo $LANG['OCC_REMARKS']; ?>" />
+									</span>
+								</div>
+							<?php endif; ?>
+							<!-- I use the label project here from the old form, not sure if it's the same thing -->
+							<div class="field-block">
+								<span class="field-label"><?php echo (defined('LABELPROJECTLABEL')?LABELPROJECTLABEL:'Project'); ?></span>
+								<span class="field-elem">
+									<input size = '50' type="text" name="labelproject" maxlength="45" value="<?php echo array_key_exists('labelproject',$occArr)?$occArr['labelproject']:''; ?>" onchange="fieldChanged('labelproject');" />
+								</span>
+							</div>
+							<div class="field-block">
+								<span class="field-label"><?php echo (isset($LANG['RECCORECTED']) ? $LANG['RECCORECTED'] : 'Record Created'); ?>:</span>
+								<span class="field-elem">
+									<input readonly size = '50' type='hidden' type='text' name='modified' id='modifiedInput' value="<?php echo $occArr['modified']; ?>" />
+									<span id="displayModified"></span>
+								</span>
+							</div>
+							<div class="field-block">
+								<span class="field-label"><?php echo (isset($LANG['PREPMETHOD']) ? $LANG['PREPMETHOD'] : 'Prep Method'); ?></span>
+								<span class="field-elem">
+									<input size = '50' type="text" name="prepMethod" value="<?php echo $occArr["prepMethod"]; ?>" onchange="fieldChanged('prepMethod');"  />
+								</span>
+							</div>
+							<div class="field-block">
+								<span class="field-label"><?php echo (isset($LANG['FORMAT']) ? $LANG['FORMAT'] : 'Format'); ?></span>
+								<span class="field-elem">
+									<input size = '50' type="text" name="format" value="<?php echo $occArr["format"]; ?>" onchange="fieldChanged('format');" />
+								</span>
+							</div>
+							<?php if(!isset($_POST['toggle-button']) || (isset($_POST['toggle-button']) && $_POST['toggle-button'] != 'Minimal')): ?>
+								<div class="field-block">
+									<span class="field-label"><?php echo (defined('VERBATIMELEVATIONLABEL')?VERBATIMELEVATIONLABEL:'Verb. Elev.'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="verbatimelevation" maxlength="255" value="<?php echo array_key_exists('verbatimelevation',$occArr)?$occArr['verbatimelevation']:''; ?>" onchange="verbatimElevationChanged(this.form);" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (isset($LANG['VERBLAT']) ? $LANG['VERBLAT'] : 'Verb. Lat.'); ?></span>
+									<span class="field-elem">
+										<!-- TODO: need to update the onchange function later to make sure the input format is correct -->
+										<input size = '50' type="text" name="verbLat" value="<?php echo $occArr["verbLat"]; ?>" onchange="decimalLatitudeChanged(this.form)" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (isset($LANG['VERBLONG']) ? $LANG['VERBLONG'] : 'Verb. Long.'); ?></span>
+									<span class="field-elem">
+										<!-- TODO: need to update the onchange function later to make sure the input format is correct -->
+										<input size = '50' type="text" name="verbLong" value="<?php echo $occArr["verbLong"]; ?>" onchange="decimalLatitudeChanged(this.form)" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (defined('DECIMALLATITUDELABEL')?DECIMALLATITUDELABEL:'Dec. Lat.'); ?></span>
+									<span class="field-elem">
+										<?php
+										$latValue = "";
+										if(array_key_exists("decimallatitude",$occArr) && $occArr["decimallatitude"] != "") {
+											$latValue = $occArr["decimallatitude"];
+										}
+										?>
+										<input size = '50' type="text" name="decimallatitude" maxlength="15" value="<?php echo $latValue; ?>" onchange="decimalLatitudeChanged(this.form)" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (defined('DECIMALLONGITUDELABEL')?DECIMALLONGITUDELABEL:'Dec. Long.'); ?></span>
+									<span class="field-elem">
+										<?php
+										$longValue = "";
+										if(array_key_exists("decimallongitude",$occArr) && $occArr["decimallongitude"] != "") {
+											$longValue = $occArr["decimallongitude"];
+										}
+										?>
+										<input size = '50' type="text" name="decimallongitude" maxlength="15" value="<?php echo $longValue; ?>" onchange="decimalLongitudeChanged(this.form);" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (isset($LANG['METHOD']) ? $LANG['METHOD'] : 'Method'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="method" value="<?php echo $occArr["method"]; ?>" onchange="fieldChanged('method');" />
+									</span>
+								</div>
+								<div class="field-block">
+									<span class="field-label"><?php echo (defined('COORDINATEUNCERTAINITYINMETERSLABEL')?COORDINATEUNCERTAINITYINMETERSLABEL:'Uncertainty'); ?></span>
+									<span class="field-elem">
+										<input size = '50' type="text" name="coordinateuncertaintyinmeters" maxlength="10" value="<?php echo array_key_exists('coordinateuncertaintyinmeters',$occArr)?$occArr['coordinateuncertaintyinmeters']:''; ?>" onchange="coordinateUncertaintyInMetersChanged(this.form);" title="<?php echo (isset($LANG['UNCERTAINTY_METERS'])?$LANG['UNCERTAINTY_METERS']:'Uncertainty in Meters'); ?>" />
+									</span>
+								</div>
+							<?php endif; ?>
+						</div>
+						<section>
+							<div class="info function-bar">
+								<div style="float:left;" title="<?php echo $LANG['PRIMARY_KEY']; ?>">
+									<?php if($occId) echo 'Key: '.$occManager->getOccId(); ?>
+								</div>
+							</div>
+							<div class="info function-bar">
+								<?php
+									echo $LANG['ENTERED_BY'].': '.($occArr['recordenteredby']?$occArr['recordenteredby']:$LANG['NOT_RECORDED']);
+									if(isset($occArr['dateentered']) && $occArr['dateentered']) echo ' ['.$occArr['dateentered'].']';
+								?>
+							</div>
+							<div class="info">
+								<span id="lastModified">
+									Last Modified: <?php echo $occArr["dateLastModified"]; ?>
+								</span>
+							</div>
+						</section> 
+						<table class = "" style = "margin-top: 10px;">									
+							<tr>
+								<td>
+									<div id="bottomSubmitDiv">
+									<input type="hidden" name="csmode" value="<?php echo $crowdSourceMode; ?>">
+									<input type="hidden" name="collid" value="<?php echo $collId; ?>">
+									<input type="hidden" name="imgid" value="<?php echo $imgId; ?>">
+									<input type="hidden" name="imgindex" value="<?php echo $currentImgIndex; ?>">
+									<input type="hidden" name="barcode" value="<?php echo $barcode; ?>">
+									<input type="hidden" name="occid" value="<?php echo $occId; ?>">
+									<input type="hidden" name="occindex" value="<?php echo $occIndex; ?>">
+										<?php
+										if($occId){
+											?>
+											<div style="float:left">
+												<div id="editButtonDiv">
+													<button type="submit" id="saveEditsButton" name="submitaction" value="saveOccurEdits" onclick="return verifyFullFormEdits(this.form)" disabled><?php echo $LANG['SAVE_EDITS']; ?></button>
+													<button 
+														type="submit" 
+														value="Previous" 
+														onclick="navigateToRecordNew(<?php echo $crowdSourceMode . ', ' . $goToMode . ', ' . $collId . ', ' . $prevImgid . ', ' . ($currentImgIndex-1) . ', ' . $prevOccid . ', ' . ($currentImgIndex-1); ?>)">
+														Previous
+													</button>
+													<a href="../misc/collprofiles.php?collid=<?php echo $collId; ?>&emode=1" >
+														<button type="button" value="Done" onclick="navigateToURL(<?php echo $collId; ?>)">Done</button>
+													</a>
+													<button 
+														type="submit" 
+														value="Next" 
+														onclick="navigateToRecordNew(<?php echo $crowdSourceMode . ', ' . $goToMode . ', ' . $collId . ', ' . $nextImgid . ', ' . ($currentImgIndex+1) . ', ' . $nextOccid . ', ' . ($currentImgIndex+1); ?>)">
+														Next
+													</button>
+													<input type="hidden" name="occindex" value="<?php echo is_numeric($occIndex)?$occIndex:''; ?>" />
+													<input type="hidden" name="editedfields" value="" />
+												</div>
+											</div>
+												<?php
+										}
+										else{
+											?>
+											<div id="addButtonDiv">
+												<input name="recordenteredby" type="hidden" value="<?php echo $PARAMS_ARR['un']; ?>" />
+												<button name="submitaction" type="submit" value="addOccurRecord" style="width:150px;font-weight:bold;margin:10px;"><?php echo $LANG['ADD_RECORD']; ?></button>
+												<input name="qrycnt" type="hidden" value="<?php echo $qryCnt?$qryCnt:''; ?>" />
+												<div style="margin-left:15px;font-weight:bold;">
+													<?php echo $LANG['FOLLOW_UP']; ?>:
+												</div>
+												<div style="margin-left:20px;">
+													<input name="gotomode" type="radio" value="1" <?php echo ($goToMode==1?'CHECKED':''); ?> /> <?php echo $LANG['GO_TO_NEW']; ?><br/>
+													<input name="gotomode" type="radio" value="2" <?php echo ($goToMode==2?'CHECKED':''); ?> /> <?php echo $LANG['GO_NEW_CARRYOVER']; ?><br/>
+													<input name="gotomode" type="radio" value="0" <?php echo (!$goToMode?'CHECKED':''); ?> /> <?php echo $LANG['REMAIN_ON_PAGE']; ?>
+												</div>
+											</div>
+											<?php
+										}
+										?>
+									</div>
+								</td>
+							</tr>
+						</table>
+					</div>  
+					<!-- column left ends -->
+
+					<!-- image part -->
+					<div class = "column right">
+						<div class="field-block title">
+							<h3>Image</h3>
+						</div>
+						<div style = "backgroufnd-color:#86C5D8; text-align: center; height: 450px;">
+							<?php
+								include_once($SERVER_ROOT.'/collections/editor/includes/quickentryimgprocessor.php');
+							?>
+						</div>
+					</div>  				
+				</form>
+				
+			</div>
+		</div>			
+	</div>
+</body>
+</html>
\ No newline at end of file
diff --git a/collections/quickentry/rpc/getcolltripsuggest.php b/collections/quickentry/rpc/getcolltripsuggest.php
new file mode 100644
index 000000000..d6b3ad88c
--- /dev/null
+++ b/collections/quickentry/rpc/getcolltripsuggest.php
@@ -0,0 +1,12 @@
+<?php
+include_once('../../../config/symbini.php');
+include_once($SERVER_ROOT.'/classes/RpcOccurrenceEditor.php');
+header('Content-Type: application/json; charset='.$CHARSET);
+
+$term = $_REQUEST['term'];
+
+$searchManager = new RpcOccurrenceEditor();
+$retArr = $searchManager->getCollTripSuggest($term);
+
+echo json_encode($retArr);
+?>
\ No newline at end of file
diff --git a/collections/quickentry/rpc/getcurrnamesuggest.php b/collections/quickentry/rpc/getcurrnamesuggest.php
new file mode 100644
index 000000000..7cefe8d5d
--- /dev/null
+++ b/collections/quickentry/rpc/getcurrnamesuggest.php
@@ -0,0 +1,12 @@
+<?php
+include_once('../../../config/symbini.php');
+include_once($SERVER_ROOT.'/classes/RpcOccurrenceEditor.php');
+header('Content-Type: application/json; charset='.$CHARSET);
+
+$term = $_REQUEST['term'];
+
+$searchManager = new RpcOccurrenceEditor();
+$retArr = $searchManager->getCurrNameSuggest($term);
+
+echo json_encode($retArr);
+?>
\ No newline at end of file
diff --git a/collections/quickentry/rpc/getfiledundersuggest.php b/collections/quickentry/rpc/getfiledundersuggest.php
new file mode 100644
index 000000000..54113a2c2
--- /dev/null
+++ b/collections/quickentry/rpc/getfiledundersuggest.php
@@ -0,0 +1,12 @@
+<?php
+include_once('../../../config/symbini.php');
+include_once($SERVER_ROOT.'/classes/RpcOccurrenceEditor.php');
+header('Content-Type: application/json; charset='.$CHARSET);
+
+$term = $_REQUEST['term'];
+
+$searchManager = new RpcOccurrenceEditor();
+$retArr = $searchManager->getFiledUnderSuggest($term);
+
+echo json_encode($retArr);
+?>
\ No newline at end of file
diff --git a/collections/quickentry/rpc/getgeowithnsuggest.php b/collections/quickentry/rpc/getgeowithnsuggest.php
new file mode 100644
index 000000000..70f17ba07
--- /dev/null
+++ b/collections/quickentry/rpc/getgeowithnsuggest.php
@@ -0,0 +1,12 @@
+<?php
+include_once('../../../config/symbini.php');
+include_once($SERVER_ROOT.'/classes/RpcOccurrenceEditor.php');
+header('Content-Type: application/json; charset='.$CHARSET);
+
+$term = $_REQUEST['term'];
+
+$searchManager = new RpcOccurrenceEditor();
+$retArr = $searchManager->getGeoWithinSuggest($term);
+
+echo json_encode($retArr);
+?>
\ No newline at end of file
diff --git a/collections/quickentry/rpc/gethighgeosuggest.php b/collections/quickentry/rpc/gethighgeosuggest.php
new file mode 100644
index 000000000..0def5c000
--- /dev/null
+++ b/collections/quickentry/rpc/gethighgeosuggest.php
@@ -0,0 +1,12 @@
+<?php
+include_once('../../../config/symbini.php');
+include_once($SERVER_ROOT.'/classes/RpcOccurrenceEditor.php');
+header('Content-Type: application/json; charset='.$CHARSET);
+
+$term = $_REQUEST['term'];
+
+$searchManager = new RpcOccurrenceEditor();
+$retArr = $searchManager->getHighGeoSuggest($term);
+
+echo json_encode($retArr);
+?>
\ No newline at end of file
diff --git a/collections/quickentry/rpc/getidentifiedbysuggest.php b/collections/quickentry/rpc/getidentifiedbysuggest.php
new file mode 100644
index 000000000..23beea18d
--- /dev/null
+++ b/collections/quickentry/rpc/getidentifiedbysuggest.php
@@ -0,0 +1,12 @@
+<?php
+include_once('../../../config/symbini.php');
+include_once($SERVER_ROOT.'/classes/RpcOccurrenceEditor.php');
+header('Content-Type: application/json; charset='.$CHARSET);
+
+$term = $_REQUEST['term'];
+
+$searchManager = new RpcOccurrenceEditor();
+$retArr = $searchManager->getIdentifedBySuggest($term);
+
+echo json_encode($retArr);
+?>
\ No newline at end of file
diff --git a/collections/quickentry/rpc/getrecordedbysuggest.php b/collections/quickentry/rpc/getrecordedbysuggest.php
new file mode 100644
index 000000000..f47b4106e
--- /dev/null
+++ b/collections/quickentry/rpc/getrecordedbysuggest.php
@@ -0,0 +1,12 @@
+<?php
+include_once('../../../config/symbini.php');
+include_once($SERVER_ROOT.'/classes/RpcOccurrenceEditor.php');
+header('Content-Type: application/json; charset='.$CHARSET);
+
+$term = $_REQUEST['term'];
+
+$searchManager = new RpcOccurrenceEditor();
+$retArr = $searchManager->getRecordedBySuggest($term);
+
+echo json_encode($retArr);
+?>
\ No newline at end of file
diff --git a/config/schema/1.0/patches/db_schema_patch-quick-entry.sql b/config/schema/1.0/patches/db_schema_patch-quick-entry.sql
new file mode 100644
index 000000000..2b45de20a
--- /dev/null
+++ b/config/schema/1.0/patches/db_schema_patch-quick-entry.sql
@@ -0,0 +1,21 @@
+INSERT IGNORE INTO schemaversion (versionnumber) values ("quick-entry-patch");
+
+-- Add missing columns to the omocurrences table where the quick entry data is stored
+ALTER TABLE `omoccurrences` 
+    ADD COLUMN `filedUnder` varchar(255) DEFAULT NULL,
+    ADD COLUMN `geoWithin` varchar(255) DEFAULT NULL,
+    ADD COLUMN `herbarium` varchar(4) NOT NULL,
+    ADD COLUMN `accesNum` varchar(255) DEFAULT NULL,
+    ADD COLUMN `currName` varchar(255) DEFAULT NULL,
+    ADD COLUMN `idQualifier` varchar(16) DEFAULT NULL,
+    ADD COLUMN `detText` text DEFAULT NULL,
+    ADD COLUMN `provenance` text DEFAULT NULL,
+    ADD COLUMN `container` varchar(255) DEFAULT NULL,
+    ADD COLUMN `collTrip` varchar(255) DEFAULT NULL,
+    ADD COLUMN `highGeo` varchar(255) DEFAULT NULL,
+    ADD COLUMN `frequency` varchar(255) DEFAULT NULL,
+    ADD COLUMN `prepMethod` varchar(255) DEFAULT NULL,
+    ADD COLUMN `format` varchar(255) DEFAULT NULL,
+    ADD COLUMN `verbLat` varchar(255) DEFAULT NULL,
+    ADD COLUMN `verbLong` varchar(255) DEFAULT NULL,
+    ADD COLUMN `method` varchar(255) DEFAULT NULL;
\ No newline at end of file
diff --git a/content/lang/collections/misc/collprofiles.en.php b/content/lang/collections/misc/collprofiles.en.php
index d2f1cbc59..e07138a64 100644
--- a/content/lang/collections/misc/collprofiles.en.php
+++ b/content/lang/collections/misc/collprofiles.en.php
@@ -24,6 +24,7 @@ $LANG['ADD_NEW_OCCUR'] = 'Add New Occurrence Record';
 $LANG['CREATE_NEW_REC'] = 'Create New Records Using Image';
 $LANG['SKELETAL'] = 'Add Skeletal Records';
 $LANG['EDIT_EXISTING'] = 'Edit Existing Occurrence Records';
+$LANG['QUICK_ENTRY_FORM'] = 'Quick Entry Form';
 $LANG['ADD_BATCH_DETER'] = 'Add Batch Determinations/Nomenclatural Adjustments';
 $LANG['PRINT_LABELS'] = 'Print Specimen Labels';
 $LANG['PRINT_ANNOTATIONS'] = 'Print Annotations Labels';
diff --git a/css/symbiota/quickentry.css b/css/symbiota/quickentry.css
new file mode 100644
index 000000000..d00d158ed
--- /dev/null
+++ b/css/symbiota/quickentry.css
@@ -0,0 +1,93 @@
+@import "variables.css";
+
+*{
+    box-sizing: border-box;
+    font-family: sans-serif;
+    font-size: 12px;
+}
+h2{
+    color: var(--darkest-color);
+    font-weight: 700;
+    font-family: var(--heading-font-family);
+}
+#titleDiv {
+    font-size: 20px;
+    margin: 10px;
+    font-weight: 700;
+}
+#top {
+    margin-bottom: 10px;
+    margin-right: 17%;
+    margin-left: 17%;
+}
+.column{
+    float: left;
+    padding:10px;
+}
+.left{
+    width: 50%;
+}
+.right{
+    width: 50%;
+}
+.info{
+    width: 100%;
+    display: flex;
+    align-items: center;
+    padding: 8px;
+}
+.row:after {
+    content: "";
+    display: table;
+    clear: both;
+}
+.function-bar{
+    border:1px solid black; 
+    display: flex;
+    align-items: center;
+}
+button{
+    color:white;
+    background-color: var(--darkest-color);
+}
+.btn label{
+    color:black;
+    background-color: var(--darkest-color);
+    border-style: solid;
+    border-color: black;
+}
+.data{
+    border-style: solid;
+    border-color: black;
+}
+.login-info{
+    border-style: solid;
+    border-color: black;
+}
+#editdiv {
+    margin-left:auto;
+    margin-right:auto;
+    width:960px;
+}
+.field-block {
+    margin: 5px 0px;
+    display: flex;
+}
+.field-label {
+    text-align: left;
+    margin-left: 5px;
+    width: 120px;
+}
+.title{
+    display: block;
+    width: 100%;
+}
+
+.highlight-label {
+    font-weight: bold;
+    color: black;
+    background-color: var(--bright-color);
+    padding: 2px 4px;
+    border-radius: 3px;
+    transition: background-color 0.3s, color 0.3s;
+}
\ No newline at end of file
diff --git a/docker/README.md b/docker/README.md
deleted file mode 100644
index 8ed4b73ae..000000000
--- a/docker/README.md
+++ /dev/null
@@ -1,20 +0,0 @@
-# Build
-1. Navigate to the directory where this readme and the docker-compose yaml file resides. Run `docker-compose up -d`.
-2. Docker should start building the containers. If there are no errors, the containers should be started automatically.
-
-Note: the symbiota code is mounted instead of being pulled from a repo. Database can be imported using a backup file or through the patches used by symbiota and also the HUH patch developed in summer 2023 by BU Spark! (instructions to be added).
-
-# Mysql container setup:
-1. In the compose.yaml file, make sure to set up a bind mount from your local directory that stores the sql backups into the Mysql container. If you have another way to import your schema, skip until step 3.
-2. Run bash in the symbiota-db container, and use `mysql -u root --password=password symbiota < <backup file name>` to import the schema.
-3. Run the Mysql daemon using `mysql -u root -p` and enter the password as 'password' when prompted.
-4. Run the following commands to create symbiota users:
-```
-CREATE USER 'symbiota-r'@'%' IDENTIFIED BY 'symbiota-r-pass';
-GRANT SELECT ON symbiota.* TO 'symbiota-r'@'%';
-
-CREATE USER 'symbiota-rw'@'%' IDENTIFIED BY 'symbiota-rw-pass';
-GRANT SELECT, INSERT, UPDATE, DELETE ON symbiota.* TO 'symbiota-rw'@'%';
-
-FLUSH PRIVILEGES;
-```
\ No newline at end of file
diff --git a/docker/docker-compose.yaml b/docker/docker-compose.yaml
deleted file mode 100644
index 5815679d8..000000000
--- a/docker/docker-compose.yaml
+++ /dev/null
@@ -1,36 +0,0 @@
-version: '3.8'
-services:
-  symbiota:
-    build:
-      context: ./ubuntuContainer
-      dockerfile: Dockerfile
-    ports:
-      - "80:80"
-    volumes:
-      - /home/herbaria/running-symbiota:/var/www/html/symbiota
-    depends_on:
-      - symbiota-db
-    networks:
-      - symbiota-network
-  symbiota-db:
-    build:
-      context: ./mysqlContainer
-      dockerfile: Dockerfile
-    environment:
-      MYSQL_ROOT_PASSWORD: password
-      MYSQL_DATABASE: symbiota
-      MYSQL_USER: user
-      MYSQL_PASSWORD: password
-    ports:
-      - "3306:3306"
-    volumes:
-      - mysql-data:/var/lib/mysql
-      - /home/herbaria/running-containers/db-schemas:/source
-    networks:
-      - symbiota-network
-volumes:
-  mysql-data:
-
-networks:
-  symbiota-network:
-    external: true
\ No newline at end of file
diff --git a/docker/mysqlContainer/Dockerfile b/docker/mysqlContainer/Dockerfile
deleted file mode 100644
index a6c5051c4..000000000
--- a/docker/mysqlContainer/Dockerfile
+++ /dev/null
@@ -1,23 +0,0 @@
-# Use the official MySQL 5.7 image
-FROM docker.io/library/mysql:5.7.44
-
-# RUN sed -i -e "s//innodb_file_format = Barracuda/g" /etc/mysql/my.cnf
-# RUN echo innodb_file_format = Barracuda >> /etc/my.cnf
-# Copy custom mysql configuration file into the image
-# COPY my.cnf /etc
-
-# Set environment variables for MySQL configuration
-ENV MYSQL_ROOT_PASSWORD=password
-ENV MYSQL_DATABASE=symbiota
-ENV MYSQL_USER=user
-ENV MYSQL_PASSWORD=password
-
-# Copy the SQL initialization script into the container (only if no db volume is mounted)
-# COPY db_schema-3.0.sql /docker-entrypoint-initdb.d/
-
-# Expose the MySQL port
-EXPOSE 3306
-
-# Start bash
-# CMD ["/bin/bash"]
-CMD ["mysqld"]
diff --git a/docker/ubuntuContainer/002-symbiota.conf b/docker/ubuntuContainer/002-symbiota.conf
deleted file mode 100644
index 3bcee081b..000000000
--- a/docker/ubuntuContainer/002-symbiota.conf
+++ /dev/null
@@ -1,35 +0,0 @@
-<VirtualHost *:80>
-	# The ServerName directive sets the request scheme, hostname and port that
-	# the server uses to identify itself. This is used when creating
-	# redirection URLs. In the context of virtual hosts, the ServerName
-	# specifies what hostname must appear in the request's Host: header to
-	# match this virtual host. For the default virtual host (this file) this
-	# value is not decisive as it is used as a last resort host regardless.
-	# However, you must set it for any further virtual host explicitly.
-	#ServerName www.example.com
-
-	ServerAdmin webmaster@localhost
-	DocumentRoot "/var/www/html/symbiota"
-	<Directory "/var/www/html/symbiota">
-		AllowOverride All
-		Require all granted
-	</Directory>
-
-	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
-	# error, crit, alert, emerg.
-	# It is also possible to configure the loglevel for particular
-	# modules, e.g.
-	#LogLevel info ssl:warn
-
-	ErrorLog ${APACHE_LOG_DIR}/error.log
-	CustomLog ${APACHE_LOG_DIR}/access.log combined
-
-	# For most configuration files from conf-available/, which are
-	# enabled or disabled at a global level, it is possible to
-	# include a line for only one particular virtual host. For example the
-	# following line enables the CGI configuration for this host only
-	# after it has been globally disabled with "a2disconf".
-	#Include conf-available/serve-cgi-bin.conf
-</VirtualHost>
-
-# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
diff --git a/docker/ubuntuContainer/Dockerfile b/docker/ubuntuContainer/Dockerfile
deleted file mode 100644
index db311515c..000000000
--- a/docker/ubuntuContainer/Dockerfile
+++ /dev/null
@@ -1,64 +0,0 @@
-# Use the Ubuntu 22.04 image as the base image
-FROM ubuntu:22.04
-
-# Disable popups asking for geography area
-ARG DEBIAN_FRONTEND=noninteractive
-
-# Set working directory
-WORKDIR /home
-
-# Install necessary packages
-RUN apt-get update && apt-get install -y \
-    bash \
-    apache2 \
-    php \
-    libapache2-mod-php \
-    ufw \
-    git \
-    openssl \
-    vim
-
-# Enable required Apache modules
-RUN a2enmod php8.1
-
-# Allow Apache through the firewall
-#RUN ufw allow 'Apache'
-
-# Install PHP extensions
-RUN apt-get install -y \
-    php-mysqli \
-    php-gd \
-    php-mbstring \
-    php-zip \
-    php-curl \
-    php-exif \
-    php-dom
-
-# Clone the GitHub repository
-# RUN cd /var/www/html && git clone -b summer-2023 --single-branch https://github.com/BU-Spark/se-Symbiota-portal.git
-
-# Copy symbiota config files to the apache2 directory
-COPY 002-symbiota.conf /etc/apache2/sites-available
-
-# Enable symbiota site
-RUN a2dissite 000-default.conf
-RUN a2ensite 002-symbiota.conf
-
-# Expose port 80 for web traffic
-EXPOSE 80
-
-# Set environment variables
-ENV APACHE_RUN_DIR /var/run/apache2
-ENV APACHE_LOG_DIR /var/log/apache2
-ENV APACHE_LOCK_DIR /var/lock/apache2
-ENV APACHE_RUN_USER www-data
-ENV APACHE_RUN_GROUP www-data
-ENV APACHE_PID_FILE /var/run/apache2/apache2.pid
-
-# Make sure the required directories exist, if they didn't already exist
-RUN mkdir -p $APACHE_RUN_DIR $APACHE_LOCK_DIR $APACHE_LOG_DIR
-
-# Start bash
-# CMD ["/bin/bash"]
-# Start apache
-ENTRYPOINT ["/usr/sbin/apache2", "-DFOREGROUND"]
\ No newline at end of file
diff --git a/js/symb/collections.editor.main.js b/js/symb/collections.editor.main.js
index 78b15e88b..93ecba305 100644
--- a/js/symb/collections.editor.main.js
+++ b/js/symb/collections.editor.main.js
@@ -85,6 +85,70 @@ $(document).ready(function () {
     },
   });
 
+  // For quick entry form
+  $("#ffcurrname").autocomplete({
+		source: "/collections/quickentry/rpc/getcurrnamesuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('currName')
+		}
+	});
+	
+	$("#fffileunder").autocomplete({
+		source: "/collections/quickentry/rpc/getfiledundersuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('filedUnder')
+		}
+	});
+
+	$("#ffidentifiedby").autocomplete({
+		source: "/collections/quickentry/rpc/getidentifiedbysuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('identifiedby')
+		}
+	});
+
+	$("#ffrecordedby").autocomplete({
+		source: "/collections/quickentry/rpc/getrecordedbysuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('recordedby')
+		}
+	});
+
+	$("#ffcolltrip").autocomplete({
+		source: "/collections/quickentry/rpc/getcolltripsuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('collTrip')
+		}
+	});
+
+	$("#ffgeowithin").autocomplete({
+		source: "/collections/quickentry/rpc/getgeowithnsuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('geoWithin')
+		}
+	});
+
+	$("#ffhighgeo").autocomplete({
+		source: "/collections/quickentry/rpc/gethighgeosuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('highGeo')
+		}
+	});
+
   $("#ffsciname").autocomplete({
     source: "rpc/getspeciessuggest.php",
     minLength: 3,
diff --git a/js/symb/collections.editor.query.js b/js/symb/collections.editor.query.js
index 773c5a46e..3d3a38a5f 100644
--- a/js/symb/collections.editor.query.js
+++ b/js/symb/collections.editor.query.js
@@ -173,6 +173,18 @@ function submitQueryForm(qryIndex){
 	if(verifyQueryForm(f)) f.submit();
 }
 
+// For quick entry form 
+function toggleDetail(){
+	var btn = document.getElementById("detail-btn");
+	if (btn.value === "detailed") {
+		btn.value = "minimal";
+		btn.innerHTML = "Minimal";
+	} else {
+		btn.value = "detailed";
+		btn.innerHTML = "Detailed";
+	}
+}
+
 function submitQueryEditor(f){
 	f.action = "occurrenceeditor.php"
 	f.direction.value = "";
@@ -193,6 +205,12 @@ function submitQueryTable(f){
 	return true;
 }
 
+// For quick entry form 
+function navigateToURL(coll) {
+    var url = "../editor/transcribe.php?collid=" + coll;
+    window.location.href = url;
+}
+
 function setOrderBy(formObject){
 	/*
 	if(formObject.value != ""){

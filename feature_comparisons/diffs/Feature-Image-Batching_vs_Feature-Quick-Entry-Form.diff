diff --git a/classes/OccurrenceEditorDeterminations.php b/classes/OccurrenceEditorDeterminations.php
index 5a092d398..332259a71 100644
--- a/classes/OccurrenceEditorDeterminations.php
+++ b/classes/OccurrenceEditorDeterminations.php
@@ -18,78 +18,6 @@ class OccurrenceEditorDeterminations extends OccurrenceEditorManager{
  		parent::__destruct();
 	}
 
-	public function getImgIndex($imgID) {
-		$imgIndex = false;
-		$query = "SELECT ordinal FROM batch_XREF WHERE imgid = '$imgID' LIMIT 1";
-		$result = $this->conn->query($query);
-
-		if ($result && $row = $result->fetch_assoc()) {
-			$imgIndex = $row['ordinal'];
-		}
-		$result->free();
-
-		return $imgIndex;
-	}
-
-	public function getlastEdit($batchID) {
-		$lastEditImgId = false;
-		$query = "SELECT last_edited FROM batch WHERE batchID = '$batchID' LIMIT 1";
-		$result = $this->conn->query($query);
-
-		if ($result && $row = $result->fetch_assoc()) {
-			$lastEditImgId = $row['last_edited'];
-		}
-		$result->free();
-
-		return $lastEditImgId;
-	}
-
-	public function getBatch($collid) {
-		$batchValues = array();	
-		$query = "SELECT batchID FROM batch WHERE collID = '$collid'";
-        $result = $this->conn->query($query);
-        while ($row = $result->fetch_assoc()) {
-            $batchValues[] = $row['batchID'];
-        }
-        $result->free();
-        return $batchValues;
-	}
-
-	public function getBatchName($batchID) {
-		$nameValues = array();
-		$query = "SELECT batch_name FROM batch WHERE batchID = '$batchID'";
-		$result = $this->conn->query($query);
-		while ($row = $result->fetch_assoc()) {
-			$nameValues[] = $row['batch_name'];
-		}
-		$result->free();
-		return $nameValues;
-	}
-
-	public function getImgIDs($batchID) {
-		$imgIDs = array();
-		$query = "SELECT imgid FROM batch_XREF WHERE batchID = '$batchID'";
-		$result = $this->conn->query($query);
-		while ($row = $result->fetch_assoc()) {
-			$imgIDs[] = $row['imgid'];
-		}
-		$result->free();
-		return $imgIDs;
-	}
-
-	public function getOneOccID($imgID) {
-		$occid = false;
-		$query = "SELECT occid FROM images WHERE imgid = '$imgID' LIMIT 1";
-		$result = $this->conn->query($query);
-
-		if ($result && $row = $result->fetch_assoc()) {
-			$occid = $row['occid'];
-		}
-		$result->free();
-
-		return $occid;
-	}
-
 	public function getDetMap($identBy, $dateIdent, $sciName){
 		$retArr = array();
 		$hasCurrent = 0;
diff --git a/classes/OccurrenceEditorManager.php b/classes/OccurrenceEditorManager.php
index 3d5b4c5e1..e3c1b2128 100644
--- a/classes/OccurrenceEditorManager.php
+++ b/classes/OccurrenceEditorManager.php
@@ -2788,9 +2788,9 @@ class OccurrenceEditorManager {
 	}
 	
 	// For quick entry form
-	public function getImgIDs($batchID) {
+	public function getImgIDs() {
 		$imgIDs = array();
-		$query = "SELECT imgid FROM batch_XREF WHERE batchID = '$batchID'";
+		$query = "SELECT imgid FROM images";
 		$result = $this->conn->query($query);
 		while ($row = $result->fetch_assoc()) {
 			$imgIDs[] = $row['imgid'];
@@ -2937,4 +2937,4 @@ class OccurrenceEditorManager {
 		}
 		return $newStr;
 	}
-}
\ No newline at end of file
+}
diff --git a/collections/misc/collprofiles.php b/collections/misc/collprofiles.php
index b0d341c5f..2ab64db87 100644
--- a/collections/misc/collprofiles.php
+++ b/collections/misc/collprofiles.php
@@ -5,6 +5,7 @@ else include_once($SERVER_ROOT . '/content/lang/collections/misc/collprofiles.en
 include_once($SERVER_ROOT . '/classes/OccurrenceCollectionProfile.php');
 include_once($SERVER_ROOT . '/classes/OccurrenceEditorManager.php');
 include_once($SERVER_ROOT . '/classes/utilities/GeneralUtil.php');
+include_once($SERVER_ROOT.'/classes/OccurrenceEditorDeterminations.php');
 
 header('Content-Type: text/html; charset=' . $CHARSET);
 unset($_SESSION['editorquery']);
@@ -32,7 +33,23 @@ if ($SYMB_UID) {
 		elseif (array_key_exists('CollEditor', $USER_RIGHTS) && in_array($collid, $USER_RIGHTS['CollEditor'])) $editCode = 1;
 	}
 }
+
+// For quick entry form 
+$occManager = new OccurrenceEditorDeterminations();
+
+// get image ids from the images table
+$imgIDs = $occManager->getImgIDs();
+$firstImgId = $imgIDs[0];
+$firstBarcode = $occManager->getBarcode($firstImgId);
+$firstIndex = 0;
+$lastImgId = end($imgIDs);
+$lastBarcode = $occManager->getBarcode($lastImgId);
+$lastIndex = count($imgIDs) - 1;
+$imgNum = count($imgIDs);
+$occData = array();
+$barcode = $occManager->getBarcode($firstIndex);
 ?>
+
 <!DOCTYPE html>
 <html lang="<?php echo $LANG_TAG ?>">
 <head>
@@ -360,10 +377,10 @@ if ($SYMB_UID) {
 									<?= $LANG['EDIT_EXISTING'] ?>
 								</a>
 							</li>
-							<!-- add a bullet point to link to the image batch -->
+							<!-- add the link to quick entry form -->
 							<li>
-								<a href="../quickentry/transcribe.php?collid=<?php echo $collid;?>">
-									<?php echo (isset($LANG['IMAGE_BATCH']) ? $LANG['IMAGE_BATCH'] : 'Image Transcription Quick Entry'); ?>
+								<a href="../quickentry/occurrencequickentry.php?csmode=0&collid=<?= $collid ?>&&imgid=<?= $firstImgId ?>&imgindex=1&barcode=0&occid=5639&occindex=1">
+									<?= $LANG['QUICK_ENTRY_FORM'] ?>
 								</a>
 							</li>
 							<li>
diff --git a/collections/quickentry/occurrencequickentry.php b/collections/quickentry/occurrencequickentry.php
index af819b672..522ebbfb1 100644
--- a/collections/quickentry/occurrencequickentry.php
+++ b/collections/quickentry/occurrencequickentry.php
@@ -32,28 +32,25 @@ if($crowdSourceMode){
 	$occManager->setCrowdSourceMode(1);
 }
 
-if (isset($_REQUEST['batchid'])) {
-    $batchId = $_REQUEST['batchid'];
-    // Use $batchId as needed
-	$imgIDs = $occManager->getImgIDs($batchId);
-	$firstImgId = $imgIDs[0];
-	$firstBarcode = $occManager->getBarcode($firstImgId);
-	$firstIndex = 0;
-	$lastImgId = end($imgIDs);
-	$lastBarcode = $occManager->getBarcode($lastImgId);
-	$lastIndex = count($imgIDs) - 1;
-	$imgNum = count($imgIDs);
-	$currentImgId = $_REQUEST['imgid'];
-	$currentImgIndex = $_REQUEST['imgindex'];
-	$occData = array();
-	// occData is a hashtable, which has imgid as key, and occid as value
-	foreach ($imgIDs as $imgID) {
-        $occData[$imgID] = $occManager->getOneOccID($imgID);
-    }
-	$firstOccId = $occData[$firstImgId];
-	$lastOccId = $occData[$lastImgId];
-	$barcode = $occManager->getBarcode($currentImgId);
-} 
+// get all image ids from the images table
+$imgIDs = $occManager->getImgIDs();
+$firstImgId = $imgIDs[0];
+$firstBarcode = $occManager->getBarcode($firstImgId);
+$firstIndex = 0;
+$lastImgId = end($imgIDs);
+$lastBarcode = $occManager->getBarcode($lastImgId);
+$lastIndex = count($imgIDs) - 1;
+$imgNum = count($imgIDs);
+$currentImgId = $_REQUEST['imgid'];
+$currentImgIndex = $_REQUEST['imgindex'];
+$occData = array();
+// occData is a hashtable, which has imgid as key, and occid as value
+foreach ($imgIDs as $imgID) {
+	$occData[$imgID] = $occManager->getOneOccID($imgID);
+}
+$firstOccId = $occData[$firstImgId];
+$lastOccId = $occData[$lastImgId];
+$barcode = $occManager->getBarcode($currentImgId);
 
 //Sanitation
 if(!is_numeric($occId)) $occId = '';
@@ -172,12 +169,10 @@ if($SYMB_UID){
 	include_once 'editProcessor.php';
 	if($action == 'saveOccurEdits'){
 		$statusStr = $occManager->editOccurrence($_POST,$isEditor);
-		$updateSuccess = $occManager->updateLastEdited($batchId, $currentImgId);
 	} 
 	// save TODO: need to update this correctly
 	elseif ($action == 'saveOCR'){
 		$statusStr = $occManager->editOccurrence($_POST,$isEditor);
-		$updateSuccess = $occManager->updateLastEdited($batchId, $currentImgId);
 	}
 	if($isEditor){
 		//Available to full editors and taxon editors
@@ -449,20 +444,20 @@ if($SYMB_UID){
 
 	if($imgNum !== false){
 		$navStr = '<b>';
-		if($currentImgIndex > 0) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($batchId).', '.($firstImgId).', '.($firstIndex).', '.($firstBarcode).', '.($firstOccId).', '.($firstIndex).')" title="'.(isset($LANG['FIRST_REC'])?$LANG['FIRST_REC']:'First Record').'">';
+		if($currentImgIndex > 0) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($firstImgId).', '.($firstIndex).', '.($firstOccId).', '.($firstIndex).')" title="'.(isset($LANG['FIRST_REC'])?$LANG['FIRST_REC']:'First Record').'">';
 		$navStr .= '|&lt;';
 		if($currentImgIndex > 0) $navStr .= '</a>';
 		$navStr .= '&nbsp;&nbsp;&nbsp;&nbsp;';
-		if($currentImgIndex > 0) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($batchId).', '.($prevImgid).', '.($currentImgIndex-1).', '.($prevBarcode).', '.($prevOccid).', '.($currentImgIndex-1).')" title="'.(isset($LANG['PREV_REC']) ? $LANG['PREV_REC'] : 'Previous Record').'">';
+		if($currentImgIndex > 0) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($prevImgid).', '.($currentImgIndex-1).', '.($prevOccid).', '.($currentImgIndex-1).')" title="'.(isset($LANG['PREV_REC']) ? $LANG['PREV_REC'] : 'Previous Record').'">';
 		$navStr .= '&lt;&lt;';
 		if($currentImgIndex > 0) $navStr .= '</a>';
 		$recIndex = ($currentImgIndex<$imgNum?($currentImgIndex + 1):'*');
 		$navStr .= '&nbsp;&nbsp;| '.($recIndex).' of '.($imgNum).' |&nbsp;&nbsp;';
-		if ($currentImgIndex < $imgNum-1) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($batchId).', '.($nextImgid).', '.($currentImgIndex+1).', '.($nextBarcode).', '.($nextOccid).', '.($currentImgIndex+1).')" title="'.(isset($LANG['NEXT_REC']) ? $LANG['NEXT_REC']:'Next Record').'">';
+		if ($currentImgIndex < $imgNum-1) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($nextImgid).', '.($currentImgIndex+1).', '.($nextOccid).', '.($currentImgIndex+1).')" title="'.(isset($LANG['NEXT_REC']) ? $LANG['NEXT_REC']:'Next Record').'">';
 		$navStr .= '&gt;&gt;';
 		if($occIndex<$imgNum-1) $navStr .= '</a>';
 		$navStr .= '&nbsp;&nbsp;&nbsp;&nbsp;';
-		if($occIndex<$imgNum-1) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($batchId).', '.($lastImgId).', '.($imgNum-1).', '.($lastBarcode).', '.($lastOccId).', '.($imgNum-1).')" title="'.(isset($LANG['LAST_REC'])?$LANG['LAST_REC']:'Last Record').'">';
+		if($occIndex<$imgNum-1) $navStr .= '<a href="#" onclick="return navigateToRecordNew('.($crowdSourceMode).', '.($goToMode).', '.($collId).', '.($lastImgId).', '.($imgNum-1).', '.($lastOccId).', '.($imgNum-1).')" title="'.(isset($LANG['LAST_REC'])?$LANG['LAST_REC']:'Last Record').'">';
 		$navStr .= '&gt;|';
 		if($occIndex<$imgNum-1) $navStr .= '</a> ';
 		$navStr .= '</b>';
@@ -554,13 +549,11 @@ else{
 					}
 				});
 			}
-			function navigateToRecordNew(crowdSourceMode, gotomode, collId, batchId, imgId, imgIndex, barcode, occId, occIndex) {
-				// If we have correct dataset, the barcode should not be null
-				// if(barcode == null && occId == null) {
+			function navigateToRecordNew(crowdSourceMode, gotomode, collId, imgId, imgIndex, occId, occIndex) {
 				if(occId == null) {
 					var url = 'occurrencequickentry.php?gotomode=' + gotomode + '&collid=' + collId + '&imgid=' + imgId + '&imgindex=' + imgIndex;
 				} else {
-					var url = 'occurrencequickentry.php?csmode=' + crowdSourceMode + '&collid=' + collId +'&batchid=' + batchId + '&imgid=' + imgId + '&imgindex=' + imgIndex + '&barcode=' + barcode + '&occid=' + occId + '&occindex=' + occIndex;
+					var url = 'occurrencequickentry.php?csmode=' + crowdSourceMode + '&collid=' + collId + '&imgid=' + imgId + '&imgindex=' + imgIndex + '&occid=' + occId + '&occindex=' + occIndex;
 				}
 				window.location.href = url;
 				event.preventDefault();
@@ -618,11 +611,10 @@ else{
 					var crowdSourceMode = <?php echo $crowdSourceMode; ?>;
 					var gotomode = <?php echo $goToMode; ?>;
 					var collId = <?php echo $collId; ?>;
-					var batchId = <?php echo $batchId; ?>;
 					var occIndex = pageNumber - 1; 
 
 					// Call the navigateToRecordNew function with the calculated parameters
-					navigateToRecordNew(crowdSourceMode, gotomode, collId, batchId, imgId, occIndex, barcode, occId, occIndex);
+					navigateToRecordNew(crowdSourceMode, gotomode, collId, imgId, occIndex, occId, occIndex);
 				} else {
 					// Handle invalid page number input
 					alert(pageNumber);
@@ -1036,7 +1028,6 @@ else{
 									<div id="bottomSubmitDiv">
 									<input type="hidden" name="csmode" value="<?php echo $crowdSourceMode; ?>">
 									<input type="hidden" name="collid" value="<?php echo $collId; ?>">
-									<input type="hidden" name="batchid" value="<?php echo $batchId; ?>">
 									<input type="hidden" name="imgid" value="<?php echo $imgId; ?>">
 									<input type="hidden" name="imgindex" value="<?php echo $currentImgIndex; ?>">
 									<input type="hidden" name="barcode" value="<?php echo $barcode; ?>">
@@ -1051,7 +1042,7 @@ else{
 													<button 
 														type="submit" 
 														value="Previous" 
-														onclick="navigateToRecordNew(<?php echo $crowdSourceMode . ', ' . $goToMode . ', ' . $collId . ', ' . $batchId . ', ' . $prevImgid . ', ' . ($currentImgIndex-1) . ', ' . $prevBarcode . ', ' . $prevOccid . ', ' . ($currentImgIndex-1); ?>)">
+														onclick="navigateToRecordNew(<?php echo $crowdSourceMode . ', ' . $goToMode . ', ' . $collId . ', ' . $prevImgid . ', ' . ($currentImgIndex-1) . ', ' . $prevOccid . ', ' . ($currentImgIndex-1); ?>)">
 														Previous
 													</button>
 													<a href="../misc/collprofiles.php?collid=<?php echo $collId; ?>&emode=1" >
@@ -1060,7 +1051,7 @@ else{
 													<button 
 														type="submit" 
 														value="Next" 
-														onclick="navigateToRecordNew(<?php echo $crowdSourceMode . ', ' . $goToMode . ', ' . $collId . ', ' . $batchId . ', ' . $nextImgid . ', ' . ($currentImgIndex+1) . ', ' . $nextBarcode . ', ' . $nextOccid . ', ' . ($currentImgIndex+1); ?>)">
+														onclick="navigateToRecordNew(<?php echo $crowdSourceMode . ', ' . $goToMode . ', ' . $collId . ', ' . $nextImgid . ', ' . ($currentImgIndex+1) . ', ' . $nextOccid . ', ' . ($currentImgIndex+1); ?>)">
 														Next
 													</button>
 													<input type="hidden" name="occindex" value="<?php echo is_numeric($occIndex)?$occIndex:''; ?>" />
diff --git a/collections/quickentry/transcribe.php b/collections/quickentry/transcribe.php
deleted file mode 100644
index 978ca24fb..000000000
--- a/collections/quickentry/transcribe.php
+++ /dev/null
@@ -1,175 +0,0 @@
-<?php
-include_once('../../config/symbini.php');
-// TODO: double check what is this file for
-include_once($SERVER_ROOT.'/classes/OccurrenceEditorDeterminations.php');
-if($LANG_TAG != 'en' && file_exists($SERVER_ROOT.'/content/lang/collections/editor/transcribe.'.$LANG_TAG.'.php')) include_once($SERVER_ROOT.'/content/lang/collections/editor/transcribe.'.$LANG_TAG.'.php');
-else include_once($SERVER_ROOT.'/content/lang/collections/editor/transcribe.en.php');
-header("Content-Type: text/html; charset=".$CHARSET);
-
-if(!$SYMB_UID) header('Location: ../../profile/index.php?refurl=../collections/editor/transcribe.php?'.htmlspecialchars($_SERVER['QUERY_STRING'], ENT_QUOTES));
-
-$crowdSourceMode = array_key_exists('csmode', $_REQUEST) ? filter_var($_REQUEST['csmode'], FILTER_SANITIZE_NUMBER_INT) : 0;
-$goToMode = array_key_exists('gotomode', $_REQUEST) ? filter_var($_REQUEST['gotomode'], FILTER_SANITIZE_NUMBER_INT) : 0;
-
-$occManager = new OccurrenceEditorDeterminations();
-$occManager->setCollId($collid);
-$collMap = $occManager->getCollMap();
-$collid = $_REQUEST['collid'];
-$qryCnt = $occManager->getQueryRecordCount();
-
-if($collMap){
-	if($collMap['colltype']=='General Observations'){
-		$isGenObs = 1;
-		$collType = 'obs';
-	}
-	elseif($collMap['colltype']=='Observations'){
-		$collType = 'obs';
-	}
-	$propArr = $occManager->getDynamicPropertiesArr();
-	if(isset($propArr['modules-panel'])){
-		foreach($propArr['modules-panel'] as $module){
-			if(isset($module['paleo']['status']) && $module['paleo']['status']) $moduleActivation[] = 'paleo';
-			elseif(isset($module['matSample']['status']) && $module['matSample']['status']){
-				$moduleActivation[] = 'matSample';
-				if($tabTarget > 3) $tabTarget++;
-			}
-		}
-	}
-}
-
-$isEditor = 0;
-$batchIds = $occManager->getBatch($collid);
-
-if($IS_ADMIN || (array_key_exists("CollAdmin",$USER_RIGHTS) && in_array($collid,$USER_RIGHTS["CollAdmin"]))){
-	$isEditor = 1;
-}
-elseif(array_key_exists("CollEditor",$USER_RIGHTS) && in_array($collid,$USER_RIGHTS["CollEditor"])){
-	$isEditor = 1;
-}
-$statusStr = '';
-
-if ($_SERVER["REQUEST_METHOD"] === "POST") {
-	if (isset($_POST["batchID"])) {
-		$selectedBatchID = $_POST["batchID"];
-		$imgIDs = $occManager->getImgIDs($selectedBatchID);
-	} else {
-		$imgIDs = $occManager->getAllImgIDs();		
-	}
-	$firstImgId = $imgIDs[0];
-	$firstBarcode = !empty($occManager->getBarcode($firstImgId)) ? ($occManager->getBarcode($firstImgId)) : 0;
-	$firstIndex = 0;
-	$lastImgId = end($imgIDs);
-	$lastBarcode = !empty($occManager->getBarcode($lastBarcode)) ? ($occManager->getBarcode($lastBarcode)) : 0;
-	$lastIndex = count($imgIDs) - 1;
-	$occData = array();
-	$lastEditImgId = $occManager->getlastEdit($selectedBatchID);
-	$lastEditBarcode = !empty($occManager->getBarcode($lastEditImgId)) ? ($occManager->getBarcode($lastEditImgId)) : 0;
-	$lastEditIndex = $occManager->getImgIndex($lastEditImgId) - 1;
-	// occData is a hashtable, which has imgid as key, and occid as value
-	foreach ($imgIDs as $imgID) {
-        $occData[$imgID] = $occManager->getOneOccID($imgID);
-    }
-	$firstOccId = !empty($occData[$firstImgId]) ? ($occData[$firstImgId]) : 0;
-	$lastOccId = !empty($occData[$lastImgId]) ? ($occData[$lastImgId]) : 0;
-	$lastEditOccId = !empty($occData[$lastEditImgId]) ? ($occData[$lastEditImgId]) : 0;
-}
-
-?>
-
-<html>
-	<head>
-	    <meta http-equiv="Content-Type" content="text/html; charset=<?php echo $CHARSET;?>">
-		<title><?php echo $DEFAULT_TITLE.$LANG['IMAGE_BATCH']; ?></title>
-		<?php
-		$activateJQuery = true;
-		if(file_exists($SERVER_ROOT.'/includes/head.php')){
-			include_once($SERVER_ROOT.'/includes/head.php');
-		}
-		else{
-			echo '<link href="'.$CLIENT_ROOT.'/css/jquery-ui.css" type="text/css" rel="stylesheet" />';
-			echo '<link href="'.$CLIENT_ROOT.'/css/basse.css?ver=1" type="text/css" rel="stylesheet" />';
-			echo '<link href="'.$CLIENT_ROOT.'/css/symbiota/quickentry.css" type="text/css" rel="stylesheet" />';
-		}
-		?>
-		<script src="<?php echo $CLIENT_ROOT; ?>/js/jquery-3.7.1.min.js" type="text/javascript"></script>
-		<script src="<?php echo $CLIENT_ROOT; ?>/js/jquery-ui.min.js" type="text/javascript"></script>
-		<script src="<?php echo $CLIENT_ROOT; ?>/js/symb/collections.editor.query.js" type="text/javascript"></script>
-		<script src="<?php echo $CLIENT_ROOT; ?>/js/symb/collections.editor.main.js" type="text/javascript"></script>
-		<script type="text/javascript">
-			function navigateToRecordNew(crowdSourceMode, gotomode, collId, batchId, imgId, imgIndex, barcode, occId, occIndex) {
-				if(barcode == null && occId == null) {
-					var url = 'occurrencequickentry.php?gotomode=' + gotomode + '&collid=' + collId + '&imgid=' + imgId + '&imgindex=' + imgIndex;
-				} else {
-					var url = 'occurrencequickentry.php?csmode=' + crowdSourceMode + '&collid=' + collId +'&batchid=' + batchId + '&imgid=' + imgId + '&imgindex=' + imgIndex + '&barcode=' + barcode + '&occid=' + occId + '&occindex=' + occIndex;
-				}
-				window.location.href = url;
-				event.preventDefault();
-			}
-		</script>
-	</head>
-	<body>
-	<?php
-	include($SERVER_ROOT.'/includes/header.php');
-	?>
-	<div class='navpath'>
-		<a href='../../index.php'><?php echo $LANG['HOME']; ?></a> &gt;&gt;
-		<a href="../misc/collprofiles.php?collid=<?php echo $collid; ?>&emode=1"><?php echo $LANG['COLL_MANAGE']; ?></a> &gt;&gt;
-		<b><?php echo $LANG['BATCH_DETERS']; ?></b>
-	</div>
-	<!-- This is inner text! -->
-	<div id="innertext">
-		<?php
-		if($isEditor){
-			?>
-			<div style="margin:0px;">
-				<fieldset style="padding:10px;">
-					<legend><b><?php echo $LANG['TRANSCRIBE_INTO_SPECIFY']; ?></b></legend>
-					<div style="margin:15px;width:700px;">
-                        <!-- TODO: update the submit function of the form -->
-						<form name="batchform" method="post">
-							<div style="margin-bottom:15px; align-items: center;">
-								<h4 style="margin-right: 15px;">Work On batch: <?php echo($selectedBatchID) ?></h4>
-								<div style="display: flex; flex-grow: 1;">
-									<button type="button" name="first" style="flex-grow: 0.5; margin-right: 5px;" onclick="return navigateToRecordNew(<?php echo ($crowdSourceMode).', '.($goToMode).', '.($collid).', '.($selectedBatchID).', '.($firstImgId).', '.($firstIndex).', '.($firstBarcode).', '.($firstOccId).', '.($firstIndex) ; ?>)"><?php echo $LANG['START_FROM']; ?> first.</button>
-									<button type="button" name="last" style="flex-grow: 0.5; margin-right: 5px;" onclick="return navigateToRecordNew(<?php echo ($crowdSourceMode).', '.($goToMode).', '.($collid).', '.($selectedBatchID).', '.($lastImgId).', '.($lastIndex).', '.($lastBarcode).', '.($lastOccId).', '.($lastIndex); ?>)"><?php echo $LANG['START_FROM']; ?> last.</button>
-									<button type="button" name="lastView" style="flex-grow: 0.5;" onclick="return navigateToRecordNew(<?php echo ($crowdSourceMode).', '.($goToMode).', '.($collid).', '.($selectedBatchID).', '.($lastEditImgId).', '.($lastEditIndex).', '.($lastEditBarcode).', '.($lastEditOccId).', '.($lastEditIndex); ?>)"><?php echo $LANG['START_FROM']; ?> last edit.</button>
-								</div>
-							</div>
-							<div>
-								<b><?php echo $LANG['WORK_ON_BATCH']; ?></b>
-								<select id="batchID" name="batchID" style="width:400px;" onchange="this.form.submit()">
-									<option value="">-- Select Batch --</option>
-									<?php
-									foreach ($batchIds as $batchID) {
-										$batch_name = current($occManager->getbatchName($batchID));
-										echo "<option value=\"$batchID\">$batch_name</option>";
-									}
-									?>
-								</select>
-							</div>
-						</form>
-					</div>
-				</fieldset>
-				<!-- TODO: need to figure out what this status is -->
-				<!-- <fieldset>
-					<div>
-						<p style="margin:0px;"><?php // echo $LANG['STATUS']; ?></p>
-					</div>
-				</fieldset> -->
-			</div>
-			<?php
-		}
-		else{
-			?>
-			<div style="font-weight:bold;margin:20px;font-weight:150%;">
-				<?php echo $LANG['NO_PERMISSIONS']; ?>
-			</div>
-			<?php
-		}
-		?>
-	</div>
-	<?php
-	include($SERVER_ROOT.'/includes/footer.php');
-	?>
-	</body>
-</html>
\ No newline at end of file
diff --git a/config/schema/1.0/patches/db_schema_patch-image-batching.sql b/config/schema/1.0/patches/db_schema_patch-image-batching.sql
deleted file mode 100644
index 9594d0a8d..000000000
--- a/config/schema/1.0/patches/db_schema_patch-image-batching.sql
+++ /dev/null
@@ -1,56 +0,0 @@
-INSERT IGNORE INTO schemaversion (versionnumber) values ("image-batching-patch");
-
--- Create batch table
-DROP TABLE IF EXISTS `batch`;
-CREATE TABLE `batch` (
-  `batchID` int(11) NOT NULL AUTO_INCREMENT,
-  `ingest_date` timestamp NOT NULL,
-  `completed_date` timestamp NULL,
-  `batch_name` varchar(100) NOT NULL,
-  `image_batch_path` varchar(100) NOT NULL,
-  `initialtimestamp` TIMESTAMP NULL DEFAULT current_timestamp,
-  `last_edited` int(11) NULL,
-  `collID` int(11) NOT NULL,
-  PRIMARY KEY (`batchID`)
-) ENGINE=InnoDB DEFAULT CHARSET=utf8;
-
--- Create cross-reference table between the batch table and images table
-DROP TABLE IF EXISTS `batch_XREF`;
-CREATE TABLE `batch_XREF` (
-  `imgid` int(10) unsigned NOT NULL,
-  `batchID` int(11) NOT NULL,
-  `ordinal` INT(10) NOT NULL,
-  `initialtimestamp` TIMESTAMP NULL DEFAULT current_timestamp,
-  PRIMARY KEY (`imgid`,`batchID`),
-  KEY `FK_batch_XREF_img` (`imgid`),
-  KEY `FK_batch_XREF_batch` (`batchID`),
-  CONSTRAINT `FK_batch_XREF_img` FOREIGN KEY (`imgid`) REFERENCES `images` (`imgid`) ON DELETE CASCADE ON UPDATE CASCADE,
-  CONSTRAINT `FK_batch_XREF_batch` FOREIGN KEY (`batchID`) REFERENCES `batch` (`batchID`) ON DELETE CASCADE ON UPDATE CASCADE
-) ENGINE=InnoDB DEFAULT CHARSET=utf8;
-
--- Create batch user table
-DROP TABLE IF EXISTS `batch_user`;
-CREATE TABLE `batch_user` (
-  `batch_userID` int(10) NOT NULL AUTO_INCREMENT,
-  `batchID` int(10) NOT NULL,
-  `uid` int(10) unsigned NOT NULL,
-  `last_position` int(10) NOT NULL,
-  `initialtimestamp` TIMESTAMP NULL DEFAULT current_timestamp,
-  PRIMARY KEY (`batch_userID`),
-  KEY `FK_batch_user_batch` (`batchID`),
-  KEY `FK_batch_user_user` (`uid`),
-  CONSTRAINT `FK_batch_user_batch` FOREIGN KEY (`batchID`) REFERENCES `batch` (`batchID`) ON DELETE CASCADE ON UPDATE CASCADE,
-  CONSTRAINT `FK_batch_user_user` FOREIGN KEY (`uid`) REFERENCES `users` (`uid`) ON DELETE CASCADE ON UPDATE CASCADE
-) ENGINE=InnoDB DEFAULT CHARSET=utf8;
-
-DROP TABLE IF EXISTS `images_barcode`;
-CREATE TABLE `images_barcode` (
-  `imgid` int(10) unsigned NOT NULL,
-  `barcode` varchar(255) NOT NULL,
-  `occid` int unsigned NOT NULL,
-  PRIMARY KEY (`barcode`),
-  KEY `FK_images_barcode_images` (`imgid`),
-  KEY `FK_images_barcode_omoccurrences` (`occid`),
-  CONSTRAINT `FK_images_barcode_images` FOREIGN KEY (`imgid`) REFERENCES `images` (`imgid`) ON DELETE CASCADE ON UPDATE CASCADE,
-  CONSTRAINT `FK_images_barcode_omoccurrences` FOREIGN KEY (`occid`) REFERENCES `omoccurrences` (`occid`) ON DELETE CASCADE ON UPDATE CASCADE
-) ENGINE=InnoDB DEFAULT CHARSET=utf8;
\ No newline at end of file
diff --git a/config/schema/1.0/patches/db_schema_patch-quick-entry.sql b/config/schema/1.0/patches/db_schema_patch-quick-entry.sql
new file mode 100644
index 000000000..2b45de20a
--- /dev/null
+++ b/config/schema/1.0/patches/db_schema_patch-quick-entry.sql
@@ -0,0 +1,21 @@
+INSERT IGNORE INTO schemaversion (versionnumber) values ("quick-entry-patch");
+
+-- Add missing columns to the omocurrences table where the quick entry data is stored
+ALTER TABLE `omoccurrences` 
+    ADD COLUMN `filedUnder` varchar(255) DEFAULT NULL,
+    ADD COLUMN `geoWithin` varchar(255) DEFAULT NULL,
+    ADD COLUMN `herbarium` varchar(4) NOT NULL,
+    ADD COLUMN `accesNum` varchar(255) DEFAULT NULL,
+    ADD COLUMN `currName` varchar(255) DEFAULT NULL,
+    ADD COLUMN `idQualifier` varchar(16) DEFAULT NULL,
+    ADD COLUMN `detText` text DEFAULT NULL,
+    ADD COLUMN `provenance` text DEFAULT NULL,
+    ADD COLUMN `container` varchar(255) DEFAULT NULL,
+    ADD COLUMN `collTrip` varchar(255) DEFAULT NULL,
+    ADD COLUMN `highGeo` varchar(255) DEFAULT NULL,
+    ADD COLUMN `frequency` varchar(255) DEFAULT NULL,
+    ADD COLUMN `prepMethod` varchar(255) DEFAULT NULL,
+    ADD COLUMN `format` varchar(255) DEFAULT NULL,
+    ADD COLUMN `verbLat` varchar(255) DEFAULT NULL,
+    ADD COLUMN `verbLong` varchar(255) DEFAULT NULL,
+    ADD COLUMN `method` varchar(255) DEFAULT NULL;
\ No newline at end of file
diff --git a/content/lang/collections/misc/collprofiles.en.php b/content/lang/collections/misc/collprofiles.en.php
index d2f1cbc59..e07138a64 100644
--- a/content/lang/collections/misc/collprofiles.en.php
+++ b/content/lang/collections/misc/collprofiles.en.php
@@ -24,6 +24,7 @@ $LANG['ADD_NEW_OCCUR'] = 'Add New Occurrence Record';
 $LANG['CREATE_NEW_REC'] = 'Create New Records Using Image';
 $LANG['SKELETAL'] = 'Add Skeletal Records';
 $LANG['EDIT_EXISTING'] = 'Edit Existing Occurrence Records';
+$LANG['QUICK_ENTRY_FORM'] = 'Quick Entry Form';
 $LANG['ADD_BATCH_DETER'] = 'Add Batch Determinations/Nomenclatural Adjustments';
 $LANG['PRINT_LABELS'] = 'Print Specimen Labels';
 $LANG['PRINT_ANNOTATIONS'] = 'Print Annotations Labels';
diff --git a/js/symb/collections.editor.main.js b/js/symb/collections.editor.main.js
index 78b15e88b..93ecba305 100644
--- a/js/symb/collections.editor.main.js
+++ b/js/symb/collections.editor.main.js
@@ -85,6 +85,70 @@ $(document).ready(function () {
     },
   });
 
+  // For quick entry form
+  $("#ffcurrname").autocomplete({
+		source: "/collections/quickentry/rpc/getcurrnamesuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('currName')
+		}
+	});
+	
+	$("#fffileunder").autocomplete({
+		source: "/collections/quickentry/rpc/getfiledundersuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('filedUnder')
+		}
+	});
+
+	$("#ffidentifiedby").autocomplete({
+		source: "/collections/quickentry/rpc/getidentifiedbysuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('identifiedby')
+		}
+	});
+
+	$("#ffrecordedby").autocomplete({
+		source: "/collections/quickentry/rpc/getrecordedbysuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('recordedby')
+		}
+	});
+
+	$("#ffcolltrip").autocomplete({
+		source: "/collections/quickentry/rpc/getcolltripsuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('collTrip')
+		}
+	});
+
+	$("#ffgeowithin").autocomplete({
+		source: "/collections/quickentry/rpc/getgeowithnsuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('geoWithin')
+		}
+	});
+
+	$("#ffhighgeo").autocomplete({
+		source: "/collections/quickentry/rpc/gethighgeosuggest.php",
+		minLength: 3, 
+		autoFocus: true, 
+		change: function(event, ui) {
+			fieldChanged('highGeo')
+		}
+	});
+
   $("#ffsciname").autocomplete({
     source: "rpc/getspeciessuggest.php",
     minLength: 3,
diff --git a/js/symb/collections.editor.query.js b/js/symb/collections.editor.query.js
index 773c5a46e..3d3a38a5f 100644
--- a/js/symb/collections.editor.query.js
+++ b/js/symb/collections.editor.query.js
@@ -173,6 +173,18 @@ function submitQueryForm(qryIndex){
 	if(verifyQueryForm(f)) f.submit();
 }
 
+// For quick entry form 
+function toggleDetail(){
+	var btn = document.getElementById("detail-btn");
+	if (btn.value === "detailed") {
+		btn.value = "minimal";
+		btn.innerHTML = "Minimal";
+	} else {
+		btn.value = "detailed";
+		btn.innerHTML = "Detailed";
+	}
+}
+
 function submitQueryEditor(f){
 	f.action = "occurrenceeditor.php"
 	f.direction.value = "";
@@ -193,6 +205,12 @@ function submitQueryTable(f){
 	return true;
 }
 
+// For quick entry form 
+function navigateToURL(coll) {
+    var url = "../editor/transcribe.php?collid=" + coll;
+    window.location.href = url;
+}
+
 function setOrderBy(formObject){
 	/*
 	if(formObject.value != ""){
